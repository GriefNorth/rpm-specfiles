From bce940806c536dd159375db2434fa848b591c945 Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Thu, 1 Jun 2017 10:06:54 +0300
Subject: [PATCH 01/21] JAyatana: removed Spanish letters AFAIK

---
 jayatana/java/CMakeLists.txt                       | 15 +++++++++
 jayatana/java/agent/Agent.java                     | 22 ++++++-------
 jayatana/java/core/Feature.java                    |  8 ++---
 jayatana/java/core/FeatureManager.java             | 36 +++++++++++-----------
 jayatana/java/core/FeatureWrapper.java             | 16 +++++-----
 jayatana/java/core/basic/GMainLoop.java            |  8 ++---
 jayatana/java/core/basic/GlobalMenu.java           | 36 +++++++++++-----------
 jayatana/java/core/basic/GlobalMenuAdapter.java    | 34 ++++++++++----------
 jayatana/java/core/basic/NativeLibraries.java.in   |  2 +-
 jayatana/java/core/swing/SwingGTKFixed.java        |  8 ++---
 jayatana/java/core/swing/SwingGlobalMenu.java      | 14 ++++-----
 .../java/core/swing/SwingGlobalMenuWindow.java     | 14 ++++-----
 jayatana/java/core/swing/SwingWMClass.java         | 14 ++++-----
 jayatana/lib/com_jarego_jayatana_Agent.c           | 32 +++++++++----------
 jayatana/lib/com_jarego_jayatana_Agent.h           |  8 ++---
 jayatana/lib/com_jarego_jayatana_basic_GMainLoop.c |  6 ++--
 .../lib/com_jarego_jayatana_basic_GlobalMenu.c     | 24 +++++++--------
 jayatana/lib/com_jarego_jayatana_collections.c     |  4 +--
 jayatana/lib/com_jarego_jayatana_collections.h     |  4 +--
 jayatana/lib/com_jarego_jayatana_jkey2xkey.c       |  4 +--
 jayatana/lib/com_jarego_jayatana_jkey2xkey.h       |  4 +--
 jayatana/lib/com_jarego_jayatana_jni.c             |  6 ++--
 jayatana/lib/com_jarego_jayatana_jni.h             |  6 ++--
 23 files changed, 170 insertions(+), 155 deletions(-)

diff --git a/jayatana/java/CMakeLists.txt b/jayatana/java/CMakeLists.txt
index 9268d7d..fd67c98 100644
--- a/jayatana/java/CMakeLists.txt
+++ b/jayatana/java/CMakeLists.txt
@@ -1,5 +1,19 @@
 include(UseJava)
 configure_file(core/basic/NativeLibraries.java.in ${CMAKE_CURRENT_BINARY_DIR}/core/basic/NativeLibraries.java)
+set(JAVA_SOURCES
+    core/Feature.java
+    core/FeatureManager.java
+    core/FeatureWrapper.java
+    core/basic/GMainLoop.java
+    core/basic/GlobalMenuAdapter.java
+    core/basic/GlobalMenu.java
+    ${CMAKE_CURRENT_BINARY_DIR}/core/basic/NativeLibraries.java
+    core/swing/SwingGlobalMenu.java
+    core/swing/SwingGTKFixed.java
+    core/swing/SwingWMClass.java
+    core/swing/SwingGlobalMenuWindow.java
+    agent/Agent.java
+    )
 add_jar(jayatana-java
     SOURCES
         core/Feature.java
@@ -31,3 +45,4 @@ add_jar(agent-java
         jayatanaag
     )
 install_jar(agent-java DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/java)
+add_custom_target(java-files-ide SOURCES ${JAVA_SOURCES})
diff --git a/jayatana/java/agent/Agent.java b/jayatana/java/agent/Agent.java
index dd4d0ee..4777174 100644
--- a/jayatana/java/agent/Agent.java
+++ b/jayatana/java/agent/Agent.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -31,20 +31,20 @@ import java.util.logging.Level;
 import java.util.logging.Logger;
 
 /**
- * Este agente java permite evaluar si la arquitectura de las librerías nativas
- * de integración son de la misma arquitectura de la máquina virtual. En caso
- * de que conincidan inicia los procesos nativos de integración de lo contrario
+ * Este agente java permite evaluar si la arquitectura de las librerias nativas
+ * de integracion son de la misma arquitectura de la maquina virtual. En caso
+ * de que conincidan inicia los procesos nativos de integracion de lo contrario
  * solo se ignoran
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public class Agent {
 	/**
-	 * Evalua si la arquitectura de la librerías nativas de Jayatana coninciden con
-	 * la arquitectura de la máquia virutal de Java.
+	 * Evalua si la arquitectura de la librerias nativas de Jayatana coninciden con
+	 * la arquitectura de la maquia virutal de Java.
 	 * 
 	 * @param agentArgs argumentos de agente
-	 * @param inst Control de la intrumentación de Java
+	 * @param inst Control de la intrumentacion de Java
 	 */
 	public static void premain(String agentArgs, Instrumentation inst) {
 		try {
@@ -53,7 +53,7 @@ public class Agent {
 					System.getProperty("java.version").startsWith("1.4"))
 				return;
 			
-			// obtienen el archivo de la librería nativa de integración
+			// obtienen el archivo de la libreria nativa de integracion
 			String libjayatanaag;
 			try {
 				if ((libjayatanaag = System.getenv("JAYATANA_LIBAGPATH")) == null) {
@@ -66,7 +66,7 @@ public class Agent {
 			}
 			
 			try {
-				// obtener arquitectura de la librería
+				// obtener arquitectura de la libreria
 				String libjayatanaagarch = "--";
 				FileInputStream fis = new FileInputStream(libjayatanaag);
 				try {
@@ -80,7 +80,7 @@ public class Agent {
 					fis.close();
 				}
 				
-				// verificar si la arquitectura conicide con la máquina virtual
+				// verificar si la arquitectura conicide con la maquina virtual
 				if (libjayatanaagarch.equals(System.getProperty("sun.arch.data.model")))
 					System.load(libjayatanaag);
 			} catch (Exception e) {}
diff --git a/jayatana/java/core/Feature.java b/jayatana/java/core/Feature.java
index a65c2ea..2ac4e76 100644
--- a/jayatana/java/core/Feature.java
+++ b/jayatana/java/core/Feature.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -27,13 +27,13 @@ package com.jarego.jayatana;
 
 /**
  * Esta interface permite controlar el despliege de diferentes
- * características
+ * caracteristicas
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public interface Feature {
 	/**
-	 * Desplegar característica
+	 * Desplegar caracteristica
 	 */
 	public void deploy();
 }
diff --git a/jayatana/java/core/FeatureManager.java b/jayatana/java/core/FeatureManager.java
index d0b3266..74c42b7 100644
--- a/jayatana/java/core/FeatureManager.java
+++ b/jayatana/java/core/FeatureManager.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -29,39 +29,39 @@ import java.util.HashMap;
 import java.util.Map;
 
 /**
- * Esta clase declara cada una de las características y permite gestionarlas para
- * controlar los desplieges de estas. Permite gestionar las características son
+ * Esta clase declara cada una de las caracteristicas y permite gestionarlas para
+ * controlar los desplieges de estas. Permite gestionar las caracteristicas son
  * instanciar las clases hasta que estas son requeridas.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public class FeatureManager {
 	/**
-	 * Característica de GMainLoop.
+	 * Caracteristica de GMainLoop.
 	 */
 	public static final String FEATURE_GMAINLOOP = "gMainLoop";
 	/**
-	 * Característica de correción de bordes de menus para el LookAndFeel de
+	 * Caracteristica de correcion de bordes de menus para el LookAndFeel de
 	 * GTK.
 	 */
 	public static final String FEATURE_SWINGGTKFIX = "swingGtkFix";
 	/**
-	 * Característica de integración de menu global con Ubuntu.
+	 * Caracteristica de integracion de menu global con Ubuntu.
 	 */
 	public static final String FEATURE_SWINGGMENU = "swingGMenu";
 	/**
-	 * Característica de cambio de Startup Window Manager Class usando
+	 * Caracteristica de cambio de Startup Window Manager Class usando
 	 * la varaible de ambiente JAYATAN_WMCLASS
 	 */
 	public static final String FEATURE_SWINGWMCLASS = "swingWMClass";
 	
 	/**
-	 * Tabla hash de características
+	 * Tabla hash de caracteristicas
 	 */
 	private static Map<String, FeatureWrapper> features = new HashMap<String, FeatureWrapper>();
 	
 	static {
-		// registrar carcateristicas de integración
+		// registrar carcateristicas de integracion
 		FeatureWrapper basicNativeLibraries = new FeatureWrapper(
 				"com.jarego.jayatana.basic.NativeLibraries");
 		
@@ -80,30 +80,30 @@ public class FeatureManager {
 	}
 	
 	/**
-	 * Despliega todas características compatibles para Swing.
+	 * Despliega todas caracteristicas compatibles para Swing.
 	 */
 	public static void deployForSwing() {
-		// desplegar carcateristicas de integración
+		// desplegar carcateristicas de integracion
 		deployOnce(FEATURE_SWINGWMCLASS);
 		deployOnce(FEATURE_SWINGGTKFIX);
 		deployOnce(FEATURE_SWINGGMENU);
 	}
 	
 	/**
-	 * Despliege una característica solo una vez.
+	 * Despliege una caracteristica solo una vez.
 	 * 
-	 * @param featureId identificador de la característica.
-	 * @return Retrona <code>True</code> si la característica es
+	 * @param featureId identificador de la caracteristica.
+	 * @return Retrona <code>True</code> si la caracteristica es
 	 * desplegada o <code>False</code> si ya estaba desplegada.
 	 */
 	public static boolean deployOnce(String featureId) {
 		return features.get(featureId).deployOnce();
 	}
 	/**
-	 * Verifica si una característica ya ha sido desplegada.
+	 * Verifica si una caracteristica ya ha sido desplegada.
 	 * 
-	 * @param featureId identificador de la característica.
-	 * @return Retrona <code>True</code> si la característica es
+	 * @param featureId identificador de la caracteristica.
+	 * @return Retrona <code>True</code> si la caracteristica es
 	 * desplegada o <code>False</code> si ya estaba desplegada.
 	 */
 	public static boolean isDeployed(String featureId) {
diff --git a/jayatana/java/core/FeatureWrapper.java b/jayatana/java/core/FeatureWrapper.java
index 621a5b8..9c0868c 100644
--- a/jayatana/java/core/FeatureWrapper.java
+++ b/jayatana/java/core/FeatureWrapper.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -32,10 +32,10 @@ import java.util.logging.Level;
 import java.util.logging.Logger;
 
 /**
- * Clase de envolutara de características para gestionar el numbero de desplieges y
+ * Clase de envolutara de caracteristicas para gestionar el numbero de desplieges y
  * control de errores durante este despliege.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public class FeatureWrapper {
 	private static List<FeatureWrapper> toFeatureWrapperArray(List<String> classNameList) {
@@ -51,7 +51,7 @@ public class FeatureWrapper {
 	private boolean deployed = false;
 	
 	/**
-	 * Crea una envolutara de característica basado en el nombre de la clase implementada de la
+	 * Crea una envolutara de caracteristica basado en el nombre de la clase implementada de la
 	 * interface <code>com.jarego.jayatana.Feature</code>.
 	 * 
 	 * @param className clase implementada de la interface <code>com.jarego.jayatana.Feature</code>
@@ -71,9 +71,9 @@ public class FeatureWrapper {
 	}
 	
 	/**
-	 * Obtiene la instancia de característica, se instancia por primera vez al invocar el método.
+	 * Obtiene la instancia de caracteristica, se instancia por primera vez al invocar el método.
 	 * 
-	 * @return retorna la interface de característica
+	 * @return retorna la interface de caracteristica
 	 * @throws ClassNotFoundException 
 	 * @throws IllegalAccessException 
 	 * @throws InstantiationException 
@@ -86,7 +86,7 @@ public class FeatureWrapper {
 	}
 	
 	/**
-	 * Verifica si la característica ya ha sido desplegada.
+	 * Verifica si la caracteristica ya ha sido desplegada.
 	 * 
 	 * @return Regresa <code>True</code> si ha sido deplegado de lo
 	 * contrario regresa <code>False</code>.
@@ -96,7 +96,7 @@ public class FeatureWrapper {
 	}
 	
 	/**
-	 * Realiza el despliege de la característica una sola vez
+	 * Realiza el despliege de la caracteristica una sola vez
 	 * 
 	 * @return Regresa <code>True</code> si es desplegada por primera vez
 	 * de lo contrario regresa <code>False</code>.
diff --git a/jayatana/java/core/basic/GMainLoop.java b/jayatana/java/core/basic/GMainLoop.java
index 0c7e4b9..30c6348 100644
--- a/jayatana/java/core/basic/GMainLoop.java
+++ b/jayatana/java/core/basic/GMainLoop.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -31,9 +31,9 @@ import java.util.logging.Logger;
 import com.jarego.jayatana.Feature;
 
 /**
- * Esta clase inicia un GMainLoop para integración con el bus de linux.
+ * Esta clase inicia un GMainLoop para integracion con el bus de linux.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public class GMainLoop implements Feature {
 	/**
@@ -47,7 +47,7 @@ public class GMainLoop implements Feature {
 	
 	@Override
 	public void deploy() {
-		// registra el hilo de salida de la aplicación para 
+		// registra el hilo de salida de la aplicacion para 
 		// detener el GMainLoop
 		Runtime.getRuntime().addShutdownHook(new Thread() {
 			{
diff --git a/jayatana/java/core/basic/GlobalMenu.java b/jayatana/java/core/basic/GlobalMenu.java
index d8c48dc..1d00f51 100644
--- a/jayatana/java/core/basic/GlobalMenu.java
+++ b/jayatana/java/core/basic/GlobalMenu.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -28,10 +28,10 @@ package com.jarego.jayatana.basic;
 import java.awt.Window;
 
 /**
- * Clase de integración de menu global Global basado en DBUS, permite interactuar con el
+ * Clase de integracion de menu global Global basado en DBUS, permite interactuar con el
  * menu global de Ubuntu con invocaciones nativas.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public abstract class GlobalMenu {
 	/**
@@ -44,20 +44,20 @@ public abstract class GlobalMenu {
 	public static final int REGISTER_STATE_REFRESH = 1;
 	
 	/**
-	 * Inicializa el las estructuras nativas para la integración con el menu global.
+	 * Inicializa el las estructuras nativas para la integracion con el menu global.
 	 */
 	native private static void initialize();
 	/**
-	 * Destruye las estructuras nativas para la integración con el menu global.
+	 * Destruye las estructuras nativas para la integracion con el menu global.
 	 */
 	native private static void uninitialize();
 	/**
-	 * Hilo del control de cierre de la aplicación.
+	 * Hilo del control de cierre de la aplicacion.
 	 */
 	public static Thread shutdownThread = null;
 	
 	/**
-	 * Inicializa las estructuras nativas además de registrar el hilo de cierre de aplicación
+	 * Inicializa las estructuras nativas ademas de registrar el hilo de cierre de aplicacion
 	 * para destruir las estructuras nativas.
 	 */
 	public static void nativeInitialize() {
@@ -83,14 +83,14 @@ public abstract class GlobalMenu {
 	
 	/**
 	 * Registra visualizador de bus de menu global. En caso de que el bus
-	 * exista se invocará el método <code>register</code>.
+	 * exista se invocara el método <code>register</code>.
 	 * 
 	 * @param windowXID identificador de ventana
 	 */
 	native synchronized public void registerWatcher(long windowXID);
 	/**
 	 * Elimina el visualizador de bus de menu global. En cas de que el bus
-	 * exista se invocará el método <code>unregister</code>.
+	 * exista se invocara el método <code>unregister</code>.
 	 * 
 	 * @param windowXID identificador de ventana
 	 */
@@ -107,7 +107,7 @@ public abstract class GlobalMenu {
 	/**
 	 * Este método es invocado cuando se registra el bus del menu global, si el menu global
 	 * no esta o se excluye por algun otro método como la variable de ambiente UBUNTU_MENUPROXY
-	 * este método nunca será invocado.
+	 * este método nunca sera invocado.
 	 * 
 	 * @param state estado de registro, cauando es la primera vez regresa el valor de
 	 * <code>REGISTER_STATE_INITIAL</code> si se esta registrando por un refresh regresa el
@@ -128,7 +128,7 @@ public abstract class GlobalMenu {
 	 * de menú el identificador del padre debe ser <code>-1</code>.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param visible estado de visibulidad del menú.
 	 */
 	native public void addMenu(long windowXID, int menuParentId, int menuId,
@@ -140,7 +140,7 @@ public abstract class GlobalMenu {
 	 * @param menuParentId identificador del menú padre.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param modifiers modificador del acelerador del menú (CTRL, ALT o SHIFT).
 	 * @param keycode acelerador del menú.
 	 */
@@ -153,10 +153,10 @@ public abstract class GlobalMenu {
 	 * @param menuParentId identificador del menú padre.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param modifiers modificador del acelerador del menú (CTRL, ALT o SHIFT).
 	 * @param keycode acelerador del menú.
-	 * @param selected estado de selección del menú.
+	 * @param selected estado de seleccion del menú.
 	 */
 	native public void addMenuItemRadio(long windowXID, int menuParentId, int menuId,
 			String label, boolean enabled, int modifiers, int keycode, boolean selected);
@@ -167,10 +167,10 @@ public abstract class GlobalMenu {
 	 * @param menuParentId identificador del menú padre.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param modifiers modificador del acelerador del menú (CTRL, ALT o SHIFT).
 	 * @param keycode acelerador del menú.
-	 * @param selected estado de selección del menú.
+	 * @param selected estado de seleccion del menú.
 	 */
 	native public void addMenuItemCheck(long windowXID, int menuParentId, int menuId,
 			String label, boolean enabled, int modifiers, int keycode, boolean selected);
@@ -182,12 +182,12 @@ public abstract class GlobalMenu {
 	 */
 	native public void addSeparator(long windowXID, int menuParentId);
 	/**
-	 * Actualización de estado del menú nativo.
+	 * Actualizacion de estado del menú nativo.
 	 * 
 	 * @param windowXID identificador de ventana
 	 * @param menuId identificador de menu
 	 * @param label nuevo valor de etiqueta
-	 * @param enabled nuevo valor de estado de habilitación del menú.
+	 * @param enabled nuevo valor de estado de habilitacion del menú.
 	 * @param visible nuevo valor de estado de visibilidad del menú.
 	 */
 	native public void updateMenu(long windowXID, int menuId, String label,
diff --git a/jayatana/java/core/basic/GlobalMenuAdapter.java b/jayatana/java/core/basic/GlobalMenuAdapter.java
index 0dcbfc7..f2f0d5b 100644
--- a/jayatana/java/core/basic/GlobalMenuAdapter.java
+++ b/jayatana/java/core/basic/GlobalMenuAdapter.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -35,18 +35,18 @@ import com.jarego.jayatana.swing.SwingGlobalMenuWindow;
  * Clase de adatador de GlobalMenu que permite encapsular el controlador de ventana
  * junto con los controles de menú nativo.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public abstract class GlobalMenuAdapter {
 	private static final int SPINCOUNT = 200;
 	private final GlobalMenuImp globalMenuImp;
 	/**
-	 * Variable de especificación de bloqueo de barra de menus
+	 * Variable de especificacion de bloqueo de barra de menus
 	 */
 	private boolean lockedMenuBar = false;
 	
 	/**
-	 * Varaible de especificación de retardo por espera de contrucción
+	 * Varaible de especificacion de retardo por espera de contruccion
 	 * de menús.
 	 */
 	protected long approveRefreshWatcher = -1;
@@ -76,14 +76,14 @@ public abstract class GlobalMenuAdapter {
 	
 	/**
 	 * Registra visualizador de bus de menu global. En caso de que el bus
-	 * exista se invocará el método <code>register</code>.
+	 * exista se invocara el método <code>register</code>.
 	 */
 	public void registerWatcher() {
 		globalMenuImp.registerWatcher(windowXID);
 	}
 	/**
 	 * Elimina el visualizador de bus de menu global. En cas de que el bus
-	 * exista se invocará el método <code>unregister</code>.
+	 * exista se invocara el método <code>unregister</code>.
 	 */
 	protected void unregisterWatcher() {
 		globalMenuImp.unregisterWatcher(windowXID);
@@ -102,7 +102,7 @@ public abstract class GlobalMenuAdapter {
 	 * 
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param visible estado de visibulidad del menú.
 	 */
 	protected void addMenu(int menuId, String label, char mnemonic, boolean enabled, boolean visible) {
@@ -117,7 +117,7 @@ public abstract class GlobalMenuAdapter {
 	 * de menú el identificador del padre debe ser <code>-1</code>.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param visible estado de visibulidad del menú.
 	 */
 	protected void addMenu(int menuParentId, int menuId, String label, char mnemonic, boolean enabled,
@@ -132,7 +132,7 @@ public abstract class GlobalMenuAdapter {
 	 * @param menuParentId identificador del menú padre.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param modifiers modificador del acelerador del menú (CTRL, ALT o SHIFT).
 	 * @param keycode acelerador del menú.
 	 */
@@ -148,10 +148,10 @@ public abstract class GlobalMenuAdapter {
 	 * @param menuParentId identificador del menú padre.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param modifiers modificador del acelerador del menú (CTRL, ALT o SHIFT).
 	 * @param keycode acelerador del menú.
-	 * @param selected estado de selección del menú.
+	 * @param selected estado de seleccion del menú.
 	 */
 	protected void addMenuItemCheck(int menuParentId, int menuId, String label, char mnemonic, boolean enabled,
 			int modifiers, int keycode, boolean selected) {
@@ -165,10 +165,10 @@ public abstract class GlobalMenuAdapter {
 	 * @param menuParentId identificador del menú padre.
 	 * @param menuId identificador del menú.
 	 * @param label etiqueta del menú.
-	 * @param enabled estado de habilitación del menú.
+	 * @param enabled estado de habilitacion del menú.
 	 * @param modifiers modificador del acelerador del menú (CTRL, ALT o SHIFT).
 	 * @param keycode acelerador del menú.
-	 * @param selected estado de selección del menú.
+	 * @param selected estado de seleccion del menú.
 	 */
 	protected void addMenuItemRadio(int menuParentId, int menuId, String label, char mnemonic, boolean enabled,
 			int modifiers, int keycode, boolean selected) {
@@ -187,11 +187,11 @@ public abstract class GlobalMenuAdapter {
 		globalMenuImp.addSeparator(windowXID, menuParentId);
 	}
 	/**
-	 * Actualización de estado del menú nativo.
+	 * Actualizacion de estado del menú nativo.
 	 * 
 	 * @param menuId identificador de menu
 	 * @param label nuevo valor de etiqueta
-	 * @param enabled nuevo valor de estado de habilitación del menú.
+	 * @param enabled nuevo valor de estado de habilitacion del menú.
 	 * @param visible nuevo valor de estado de visibilidad del menú.
 	 */
 	protected void updateMenu(int menuId, String label, char mnemonics, boolean enabled, boolean visible) {
@@ -300,7 +300,7 @@ public abstract class GlobalMenuAdapter {
 	 */
 	abstract protected void register(int state);
 	/**
-	 * Registro de evento cuando termina la conexión al controlador de Menus de Ubuntu.
+	 * Registro de evento cuando termina la conexion al controlador de Menus de Ubuntu.
 	 */
 	abstract protected void unregister();
 	/**
@@ -329,7 +329,7 @@ public abstract class GlobalMenuAdapter {
 	/**
 	 * Contenedor de adaptador de menu para eviar el acceso a métodos internos
 	 * 
-	 * @author Jared González
+	 * @author Jared Gonzalez
 	 */
 	private static class GlobalMenuImp extends GlobalMenu {
 		private final GlobalMenuAdapter globalMenuAdapter;
diff --git a/jayatana/java/core/basic/NativeLibraries.java.in b/jayatana/java/core/basic/NativeLibraries.java.in
index cf09d39..dd2b16b 100644
--- a/jayatana/java/core/basic/NativeLibraries.java.in
+++ b/jayatana/java/core/basic/NativeLibraries.java.in
@@ -14,7 +14,7 @@ public class NativeLibraries implements Feature {
 			System.load(System.getenv("JAYATANA_NATIVEPATH"));
 			System.err.println("JAYATANA_NATIVEPATH="+System.getenv("JAYATANA_NATIVEPATH"));
 		} else {
-			// si la libreria no existe cancelar integración
+			// si la libreria no existe cancelar integracion
 			if (!new File("@CMAKE_INSTALL_FULL_LIBDIR@/jayatana/libjayatana.so").canRead())
 				return;
 			System.load("@CMAKE_INSTALL_FULL_LIBDIR@/jayatana/libjayatana.so");
diff --git a/jayatana/java/core/swing/SwingGTKFixed.java b/jayatana/java/core/swing/SwingGTKFixed.java
index b3aae58..30400e1 100644
--- a/jayatana/java/core/swing/SwingGTKFixed.java
+++ b/jayatana/java/core/swing/SwingGTKFixed.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -39,15 +39,15 @@ import javax.swing.UIManager;
 import javax.swing.plaf.synth.Region;
 
 /**
- * Esta clase es una característica para corregir el borde los menus en GTK los cuales no
+ * Esta clase es una caracteristica para corregir el borde los menus en GTK los cuales no
  * se muestran. Esta clase permite incorporar el dibujado de los bordes de estos menús.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 @SuppressWarnings("restriction")
 public class SwingGTKFixed implements Feature, PropertyChangeListener {
 	/**
-	 * Se despliega la correción del borde de los menús en GTK.
+	 * Se despliega la correcion del borde de los menús en GTK.
 	 */
 	@Override
 	public void deploy() {
diff --git a/jayatana/java/core/swing/SwingGlobalMenu.java b/jayatana/java/core/swing/SwingGlobalMenu.java
index 5f56e4b..103a732 100644
--- a/jayatana/java/core/swing/SwingGlobalMenu.java
+++ b/jayatana/java/core/swing/SwingGlobalMenu.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -47,14 +47,14 @@ import com.jarego.jayatana.FeatureManager;
 import com.jarego.jayatana.basic.GlobalMenu;
 
 /**
- * Clase de caráteristica para desplegar la integración con el menú global
+ * Clase de carateristica para desplegar la integracion con el menú global
  * de Ubuntu para aplicaciones Java Swing.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public class SwingGlobalMenu implements Feature, AWTEventListener {
 	/**
-	 * Iniciar despliege de característica para la integración del menú global
+	 * Iniciar despliege de caracteristica para la integracion del menú global
 	 * de Ubuntu.
 	 */
 	@Override
@@ -65,7 +65,7 @@ public class SwingGlobalMenu implements Feature, AWTEventListener {
 	}
 	
 	/**
-	 * Escucha de evento de apertura de ventana para lazar integración
+	 * Escucha de evento de apertura de ventana para lazar integracion
 	 * para cada ventana nueva lanzada.
 	 */
 	@Override
@@ -134,7 +134,7 @@ public class SwingGlobalMenu implements Feature, AWTEventListener {
 	}
 	
 	/**
-	 * Tratar de instalar siempre y cuando este en ejecución el bus del menú global.
+	 * Tratar de instalar siempre y cuando este en ejecucion el bus del menú global.
 	 * 
 	 * @param window ventana.
 	 * @param menubar barra de menús.
@@ -212,7 +212,7 @@ public class SwingGlobalMenu implements Feature, AWTEventListener {
 	/**
 	 * Clase para liberar el bloque de menus una vez cerrada la ventana MODAL.
 	 * 
-	 * @author Jared González
+	 * @author Jared Gonzalez
 	 */
 	private class ApplicationModalWindowListener implements WindowListener, ComponentListener {
 		boolean locked;
diff --git a/jayatana/java/core/swing/SwingGlobalMenuWindow.java b/jayatana/java/core/swing/SwingGlobalMenuWindow.java
index b9f8bfc..d7c5495 100644
--- a/jayatana/java/core/swing/SwingGlobalMenuWindow.java
+++ b/jayatana/java/core/swing/SwingGlobalMenuWindow.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -68,7 +68,7 @@ import com.jarego.jayatana.basic.GlobalMenuAdapter;
 /**
  * Esta clase permite controlar los menus asociados a una ventana Java Swing.
  * 
- * @author Jared González
+ * @author Jared Gonzalez
  */
 public class SwingGlobalMenuWindow extends GlobalMenuAdapter implements WindowListener,
 		AWTEventListener, ContainerListener, PropertyChangeListener, ComponentListener {
@@ -100,7 +100,7 @@ public class SwingGlobalMenuWindow extends GlobalMenuAdapter implements WindowLi
 						// ocular barra de menús
 						menubar.setVisible(false);
 						
-						// Correción para Netbeans
+						// Correcion para Netbeans
 						netbeansPlatform = "org.openide.awt.MenuBar".equals(
 								menubar.getClass().getName());
 						// -----------------------
@@ -242,7 +242,7 @@ public class SwingGlobalMenuWindow extends GlobalMenuAdapter implements WindowLi
 	}
 	
 	/**
-	 * Activación de menú.
+	 * Activacion de menú.
 	 */
 	@Override
 	protected void menuActivated(int parentMenuId, int menuId) {
@@ -265,7 +265,7 @@ public class SwingGlobalMenuWindow extends GlobalMenuAdapter implements WindowLi
 	 * Java Refelection.
 	 * 
 	 * @param cls Clase a comparar.
-	 * @param scls Clase o interface de comparación.
+	 * @param scls Clase o interface de comparacion.
 	 * @return Si es una instancia herededa o implementada regresa
 	 * <code>True</code> de lo contrario <code>False</code>.
 	 */
@@ -284,7 +284,7 @@ public class SwingGlobalMenuWindow extends GlobalMenuAdapter implements WindowLi
 	}
 	
 	/**
-	 * Invocación de menus de plataforma Netbeans, permite invocar contructores propios de la
+	 * Invocacion de menus de plataforma Netbeans, permite invocar contructores propios de la
 	 * plataforma para obtener los menús.
 	 * 
 	 * @param menu menú de plataforma Netbeans.
@@ -350,7 +350,7 @@ public class SwingGlobalMenuWindow extends GlobalMenuAdapter implements WindowLi
 						for (PopupMenuListener pl : popupMenu.getPopupMenuListeners())
 							if (pl != null) pl.popupMenuWillBecomeVisible(pevent);
 						
-						// Correción para Netbeans
+						// Correcion para Netbeans
 						if (netbeansPlatform)
 							menuAboutToShowForNetbeansPlatform(menu);
 						// -----------------------
diff --git a/jayatana/java/core/swing/SwingWMClass.java b/jayatana/java/core/swing/SwingWMClass.java
index c0696c5..c2c7ecd 100644
--- a/jayatana/java/core/swing/SwingWMClass.java
+++ b/jayatana/java/core/swing/SwingWMClass.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -33,23 +33,23 @@ import java.util.logging.Logger;
 import com.jarego.jayatana.Feature;
 
 /**
- * Esta clase es un característica para modificar el valor del STARTUP WINDOW MANAGER CLASS
- * el cual puede permite integrarse a un archivo lanzador *.desktop para integración con la
+ * Esta clase es un caracteristica para modificar el valor del STARTUP WINDOW MANAGER CLASS
+ * el cual puede permite integrarse a un archivo lanzador *.desktop para integracion con la
  * barra de menús de Ubuntu.
  * 
- * Este valor se puede modificar con el parámetro de máquina virtal:
+ * Este valor se puede modificar con el parametro de maquina virtal:
  * 		jayatana.wmclass
  * O con la variable de ambiente:
  * 		JAYATANA_WMCLASS
  * 
- * Este valor puede usarse en convinación con el parámetro StartupWMClass del archivo .desktop
+ * Este valor puede usarse en convinacion con el parametro StartupWMClass del archivo .desktop
  * Para permitir integrar con la barra de lanzamiento unity.
  * 
- * @author Jared González.
+ * @author Jared Gonzalez.
  */
 public class SwingWMClass implements Feature {
 	/**
-	 * Despliege de característica para permitir integración con el lanzador de Unity.
+	 * Despliege de caracteristica para permitir integracion con el lanzador de Unity.
 	 */
 	@Override
 	public void deploy() {
diff --git a/jayatana/lib/com_jarego_jayatana_Agent.c b/jayatana/lib/com_jarego_jayatana_Agent.c
index 34c2299..9eed664 100644
--- a/jayatana/lib/com_jarego_jayatana_Agent.c
+++ b/jayatana/lib/com_jarego_jayatana_Agent.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_Agent.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include <jvmti.h>
 #include <stdbool.h>
@@ -43,25 +43,25 @@ extern void XInitThreads(void);
 #endif
 
 /**
- * Inicializar observadores de componentes para prevenir la integración
+ * Inicializar observadores de componentes para prevenir la integracion
  * con Ubuntu/Linux.
  */
 jvmtiError com_jarego_jayatana_Initialize(JavaVM *vm, int fromAgent);
 
 /**
- * Validar el valor de una variable de ambiente para más opciones o
- * variables de configuración.
+ * Validar el valor de una variable de ambiente para mas opciones o
+ * variables de configuracion.
  */
 int com_jarego_jayatana_Agent_CheckEnv(const char *envname, const char *envval, const int def);
 
 /**
- * Iniciar observador de inicio de hilos para prevenir la integración
+ * Iniciar observador de inicio de hilos para prevenir la integracion
  * con Ubuntu/Linux
  */
 static void JNICALL com_jarego_jayatana_Agent_threadStart(jvmtiEnv *jvmti_env, JNIEnv *jni_env,
                                                           jthread thread)
 {
-	// recuperar información del hilo
+	// recuperar informacion del hilo
 	jvmtiError error;
 	jvmtiThreadInfo info;
 	error = (*jvmti_env)->GetThreadInfo(jvmti_env, thread, &info);
@@ -99,7 +99,7 @@ static void JNICALL com_jarego_jayatana_Agent_threadStart(jvmtiEnv *jvmti_env, J
 		}
 		else if (strcmp(info.name, "AWT-XAWT") == 0)
 		{
-			// instala la clase para control de integración Swing
+			// instala la clase para control de integracion Swing
 			jclass clsInstallers =
 			    (*jni_env)->FindClass(jni_env, "com/jarego/jayatana/FeatureManager");
 			if (clsInstallers != NULL)
@@ -125,7 +125,7 @@ static void JNICALL com_jarego_jayatana_Agent_threadStart(jvmtiEnv *jvmti_env, J
 }
 
 /**
- * Cargar agente para integración con Ubuntu/Linux
+ * Cargar agente para integracion con Ubuntu/Linux
  */
 JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *vm, char *options, void *reserved)
 {
@@ -133,7 +133,7 @@ JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *vm, char *options, void *reserved)
 }
 
 /**
- * Carga libreria nativa desde agente Java para integración
+ * Carga libreria nativa desde agente Java para integracion
  * con Ubuntu/Linux
  */
 jint JNI_OnLoad(JavaVM *vm, void *reserved)
@@ -143,7 +143,7 @@ jint JNI_OnLoad(JavaVM *vm, void *reserved)
 }
 
 /**
- * Inicializar observadores de componentes para prevenir la integración
+ * Inicializar observadores de componentes para prevenir la integracion
  * con Ubuntu/Linux.
  */
 jvmtiError com_jarego_jayatana_Initialize(JavaVM *vm, int fromAgent)
@@ -152,7 +152,7 @@ jvmtiError com_jarego_jayatana_Initialize(JavaVM *vm, int fromAgent)
 	if (getenv("JAYATANA_CLASSPATH") == NULL && access(JAVADIR "/jayatana.jar", R_OK) != 0)
 		return JVMTI_ERROR_NONE;
 
-	// la librería si existe iniciar procedo de validación de integración
+	// la libreria si existe iniciar procedo de validacion de integracion
 	if (com_jarego_jayatana_Agent_CheckEnv("XDG_CURRENT_DESKTOP", "Unity", false)
 	        ? com_jarego_jayatana_Agent_CheckEnv("JAYATANA_FORCE", "true", true) &&
 	              com_jarego_jayatana_Agent_CheckEnv("JAYATANA", "1", true)
@@ -199,7 +199,7 @@ jvmtiError com_jarego_jayatana_Initialize(JavaVM *vm, int fromAgent)
 
 				// cargar ruta de clases jayatana
 				if (getenv("JAYATANA_CLASSPATH") != NULL)
-				{ // opción para desarrollo
+				{ // opcion para desarrollo
 					(*jvmti_env)
 					    ->AddToSystemClassLoaderSearch(
 					        jvmti_env, getenv("JAYATANA_CLASSPATH"));
@@ -215,7 +215,7 @@ jvmtiError com_jarego_jayatana_Initialize(JavaVM *vm, int fromAgent)
 				}
 			}
 
-			// liberar cadena de versión
+			// liberar cadena de version
 			(*jvmti_env)->Deallocate(jvmti_env, (unsigned char *)version);
 		}
 	}
@@ -223,8 +223,8 @@ jvmtiError com_jarego_jayatana_Initialize(JavaVM *vm, int fromAgent)
 }
 
 /**
- * Validar el valor de una variable de ambiente para más opciones o
- * variables de configuración.
+ * Validar el valor de una variable de ambiente para mas opciones o
+ * variables de configuracion.
  */
 int com_jarego_jayatana_Agent_CheckEnv(const char *envname, const char *envval, const int def)
 {
diff --git a/jayatana/lib/com_jarego_jayatana_Agent.h b/jayatana/lib/com_jarego_jayatana_Agent.h
index f6000ce..4b8ae1d 100644
--- a/jayatana/lib/com_jarego_jayatana_Agent.h
+++ b/jayatana/lib/com_jarego_jayatana_Agent.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   ayatana_Collections.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #ifndef COM_JAREGO_JAYATANA_AGENT_H_
 #define COM_JAREGO_JAYATANA_AGENT_H_
@@ -32,12 +32,12 @@
 #include <jni.h>
 
 /**
- * Cargar agente para integración con Ubuntu/Linux
+ * Cargar agente para integracion con Ubuntu/Linux
  */
 JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *vm, char *options, void *reserved);
 
 /**
- * Carga libreria nativa desde agente Java para integración
+ * Carga libreria nativa desde agente Java para integracion
  * con Ubuntu/Linux
  */
 jint JNI_OnLoad(JavaVM *vm, void *reserved);
diff --git a/jayatana/lib/com_jarego_jayatana_basic_GMainLoop.c b/jayatana/lib/com_jarego_jayatana_basic_GMainLoop.c
index 8745af0..585ddb0 100644
--- a/jayatana/lib/com_jarego_jayatana_basic_GMainLoop.c
+++ b/jayatana/lib/com_jarego_jayatana_basic_GMainLoop.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_basic_GMainLoop.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include "com_jarego_jayatana_basic_GMainLoop.h"
 
@@ -39,7 +39,7 @@
 GMainLoop *com_jarego_jayatana_gmainloop = NULL;
 
 /**
- * Hilo que mantiene en ejecución un GMainLoop
+ * Hilo que mantiene en ejecucion un GMainLoop
  */
 gpointer com_jarego_jayatana_gmainloop_thread(gpointer data)
 {
diff --git a/jayatana/lib/com_jarego_jayatana_basic_GlobalMenu.c b/jayatana/lib/com_jarego_jayatana_basic_GlobalMenu.c
index 5109cf8..c93653d 100644
--- a/jayatana/lib/com_jarego_jayatana_basic_GlobalMenu.c
+++ b/jayatana/lib/com_jarego_jayatana_basic_GlobalMenu.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_basic_GlobalMenu.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include "com_jarego_jayatana_basic_GlobalMenu.h"
 
@@ -232,7 +232,7 @@ JNIEXPORT jlong JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_getWindowXID(J
 }
 
 /**
- * Notificación de bus disponible para menu global
+ * Notificacion de bus disponible para menu global
  */
 void jayatana_on_registrar_available(GDBusConnection *connection, const gchar *name,
                                      const gchar *name_owner, gpointer user_data)
@@ -272,7 +272,7 @@ void jayatana_on_registrar_available(GDBusConnection *connection, const gchar *n
 		jint register_state = globalmenu_window->registerState;
 		if (globalmenu_window->registerState == REGISTER_STATE_REFRESH)
 			globalmenu_window->registerState = REGISTER_STATE_INITIAL;
-		// notificar a clase java la integración
+		// notificar a clase java la integracion
 		JNIEnv *env = NULL;
 		(*jayatana_jvm)->AttachCurrentThread(jayatana_jvm, (void **)&env, NULL);
 		jclass thatclass = (*env)->GetObjectClass(env, globalmenu_window->globalThat);
@@ -286,7 +286,7 @@ void jayatana_on_registrar_available(GDBusConnection *connection, const gchar *n
 }
 
 /**
- * Notificación de bus no disponible para menu global
+ * Notificacion de bus no disponible para menu global
  */
 void jayatana_on_registrar_unavailable(GDBusConnection *connection, const gchar *name,
                                        gpointer user_data)
@@ -381,7 +381,7 @@ JNIEXPORT void JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_unregisterWatch
 }
 
 /**
- * Actualiza el bus para menus en caso de una recontrucción de menus
+ * Actualiza el bus para menus en caso de una recontruccion de menus
  */
 JNIEXPORT void JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_refreshWatcher(JNIEnv *env,
                                                                                 jobject that,
@@ -397,8 +397,8 @@ JNIEXPORT void JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_refreshWatcher(
 			if (globalmenu_window->gdBusProxyRegistered)
 			{
 				// liberar menus
-				// TODO: La liberación periva de los menus genera un crash en la
-				// aplicación
+				// TODO: La liberacion periva de los menus genera un crash en la
+				// aplicacion
 				// al momento de recontruir los menus, revisar posibles fugas de
 				// memoria.
 				// g_list_free_full(dbusmenu_menuitem_take_children(globalmenu_window->dbusMenuRoot),
@@ -431,7 +431,7 @@ JNIEXPORT void JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_refreshWatcher(
 }
 
 /**
- * Invoar generación el momento de presionar la expanción del menu
+ * Invoar generacion el momento de presionar la expancion del menu
  */
 void jayatana_item_about_to_show(DbusmenuMenuitem *item)
 {
@@ -470,7 +470,7 @@ void jayatana_item_about_to_show(DbusmenuMenuitem *item)
 }
 
 /**
- * Invocar generación de menus desde HUD y cerrado de menus
+ * Invocar generacion de menus desde HUD y cerrado de menus
  */
 void jayatana_item_events(DbusmenuMenuitem *item, const char *event)
 {
@@ -541,7 +541,7 @@ void jayatana_item_events(DbusmenuMenuitem *item, const char *event)
 }
 
 /**
- * Invokar activación de menu
+ * Invokar activacion de menu
  */
 void jayatana_item_activated(DbusmenuMenuitem *item, guint timestamp, gpointer user_data)
 {
@@ -746,7 +746,7 @@ JNIEXPORT void JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_addMenuItemRadi
 }
 
 /**
- * Agregar un nuevo elemento de menu tipo verificación
+ * Agregar un nuevo elemento de menu tipo verificacion
  */
 JNIEXPORT void JNICALL Java_com_jarego_jayatana_basic_GlobalMenu_addMenuItemCheck(
     JNIEnv *env, jobject that, jlong windowXID, jint menuParentID, jint menuID, jstring label,
diff --git a/jayatana/lib/com_jarego_jayatana_collections.c b/jayatana/lib/com_jarego_jayatana_collections.c
index 46b83ee..4db49f3 100644
--- a/jayatana/lib/com_jarego_jayatana_collections.c
+++ b/jayatana/lib/com_jarego_jayatana_collections.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_collections.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include "com_jarego_jayatana_collections.h"
 
diff --git a/jayatana/lib/com_jarego_jayatana_collections.h b/jayatana/lib/com_jarego_jayatana_collections.h
index 76174e6..29a0153 100644
--- a/jayatana/lib/com_jarego_jayatana_collections.h
+++ b/jayatana/lib/com_jarego_jayatana_collections.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_collections.h
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #ifndef COM_JAREGO_JAYATANA_LIST_INDEX_H_
 #define COM_JAREGO_JAYATANA_LIST_INDEX_H_
diff --git a/jayatana/lib/com_jarego_jayatana_jkey2xkey.c b/jayatana/lib/com_jarego_jayatana_jkey2xkey.c
index 663ad04..467e52a 100644
--- a/jayatana/lib/com_jarego_jayatana_jkey2xkey.c
+++ b/jayatana/lib/com_jarego_jayatana_jkey2xkey.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_jkey2xkey.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include "com_jarego_jayatana_jkey2xkey.h"
 
diff --git a/jayatana/lib/com_jarego_jayatana_jkey2xkey.h b/jayatana/lib/com_jarego_jayatana_jkey2xkey.h
index 12ff835..0ff0928 100644
--- a/jayatana/lib/com_jarego_jayatana_jkey2xkey.h
+++ b/jayatana/lib/com_jarego_jayatana_jkey2xkey.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_jkey2xkey.h
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 
 #ifndef COM_JAREGO_JAYATANA_JKEY2XKEY_H_
diff --git a/jayatana/lib/com_jarego_jayatana_jni.c b/jayatana/lib/com_jarego_jayatana_jni.c
index a886ef2..21782df 100644
--- a/jayatana/lib/com_jarego_jayatana_jni.c
+++ b/jayatana/lib/com_jarego_jayatana_jni.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,12 +24,12 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_jni.c
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include "com_jarego_jayatana_jni.h"
 
 /**
- * Obtener el putero JavaVM para permitr integración con Ubuntu/Linux
+ * Obtener el putero JavaVM para permitr integracion con Ubuntu/Linux
  */
 jint JNI_OnLoad(JavaVM *jvm, void *reserved)
 {
diff --git a/jayatana/lib/com_jarego_jayatana_jni.h b/jayatana/lib/com_jarego_jayatana_jni.h
index e90cc63..acd9b1d 100644
--- a/jayatana/lib/com_jarego_jayatana_jni.h
+++ b/jayatana/lib/com_jarego_jayatana_jni.h
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2014 Jared González
+ * Copyright (c) 2014 Jared Gonzalez
  *
  * Permission is hereby granted, free of charge, to any
  * person obtaining a copy of this software and associated
@@ -24,7 +24,7 @@
  * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  *
  * File:   com_jarego_jayatana_jni.h
- * Author: Jared González
+ * Author: Jared Gonzalez
  */
 #include <jni.h>
 
@@ -34,7 +34,7 @@
 JavaVM *jayatana_jvm;
 
 /**
- * Obtener el putero JavaVM para permitr integración con Ubuntu/Linux
+ * Obtener el putero JavaVM para permitr integracion con Ubuntu/Linux
  */
 jint JNI_OnLoad(JavaVM *, void *);
 
-- 
2.9.4


From f85f1e9e7ceb46f3dd0620fcccf41a4a0b0d73cf Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Wed, 7 Jun 2017 13:49:25 +0300
Subject: [PATCH 02/21] CMakeLists: use CMakeDependentOption

---
 CMakeLists.txt | 74 ++++++++++++++++++++++++----------------------------------
 1 file changed, 30 insertions(+), 44 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index f2a40da..1f423ff 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -57,7 +57,7 @@ add_definitions(-Wall -Wno-unused # Vala loves to create variables
 
 find_package (PkgConfig)
 
-pkg_check_modules (CORE REQUIRED QUIET
+pkg_check_modules (CORE QUIET
   gtk+-3.0>=3.10
   glib-2.0>=2.44
   gio-2.0>=2.44
@@ -76,6 +76,9 @@ pkg_check_modules(GLIB REQUIRED
     gthread-2.0>=2.44
     gmodule-2.0>=2.44)
 
+pkg_check_modules(BAMF REQUIRED
+    libbamf3)
+
 set(CORE_PACKAGES
   gtk+-3.0
   glib-2.0
@@ -87,57 +90,40 @@ set(CORE_PACKAGES
 
 #set requred variables
 set(TARGET_GLIB ${GLIB_VERSION_MAJOR}.${GLIB_VERSION_MINOR})
+include(CMakeDependentOption)
 
 #set build options
-option(ENABLE_WNCK "Enable libwnck-related functions" ON)
-if (ENABLE_WNCK)
-    pkg_check_modules(WNCK libwnck-3.0>=3.4.0)
-    if (NOT(WNCK_FOUND))
-        set(ENABLE_WNCK OFF)
-    endif()
-endif()
+pkg_check_modules(WNCK libwnck-3.0>=3.4.0)
+cmake_dependent_option(ENABLE_WNCK "Enable libwnck-related functions" ON
+    "WNCK_FOUND" OFF)
 if (ENABLE_WNCK)
+    message("Using libwnck, will be X-dependent")
     set(WNCK_DEFINE -D WNCK)
     set(WNCK_PACKAGES libwnck-3.0)
 endif()
-option(ENABLE_XFCE "Enable Xfce Panel Integration" ON)
-if (ENABLE_XFCE)
-    pkg_check_modules(XFCE libxfce4panel-2.0 libxfconf-0)
-    if (NOT(XFCE_FOUND))
-	set(ENABLE_XFCE OFF)
-    endif()
-endif()
-
-
-option(ENABLE_MATE "Enable mate-panel Integration" ON)
-if (ENABLE_MATE)
-    pkg_check_modules(MATE libmatepanelapplet-4.0)
-    if (NOT MATE_FOUND)
-	set(ENABLE_MATE OFF)
-    endif()
-endif()
-
-
-option(ENABLE_VALAPANEL "Enable Vala Panel Integration" ON)
-if (ENABLE_VALAPANEL)
-    pkg_check_modules(VALAPANEL vala-panel libpeas-1.0)
-    if (NOT(VALAPANEL_FOUND))
-        set(ENABLE_VALAPANEL OFF)
-    endif()
-    pkg_check_modules(VP_NEW vala-panel>=0.3.50)
-    if (VP_NEW_FOUND)
-        set(NEW_DEFINE -D NEW)
-        set(NEW_IFACE ON)
-    endif()
+pkg_check_modules(XFCE libxfce4panel-2.0 libxfconf-0)
+cmake_dependent_option(ENABLE_XFCE "Enable Xfce Panel Integration" ON
+    "XFCE_FOUND" OFF)
+
+pkg_check_modules(MATE libmatepanelapplet-4.0)
+cmake_dependent_option(ENABLE_MATE "Enable mate-panel Integration" ON
+    "MATE_FOUND" OFF)
+
+pkg_check_modules(PEAS libpeas-1.0)
+pkg_check_modules(VALAPANEL vala-panel)
+pkg_check_modules(VP_NEW vala-panel>=0.3.50 QUIET)
+pkg_check_modules(BUDGIE budgie-1.0 libpeas-1.0)
+
+cmake_dependent_option(ENABLE_VALAPANEL "Enable Vala Panel Integration" ON
+    "VALAPANEL_FOUND; PEAS_FOUND" OFF)
+if (VP_NEW_FOUND)
+    message("Using 0.4 ValaPanelApplet api")
+    set(NEW_DEFINE -D NEW)
+    set(NEW_IFACE ON)
 endif()
 
-option(ENABLE_BUDGIE "Enable budgie-desktop plugin" ON)
-if (ENABLE_BUDGIE)
-    pkg_check_modules(BUDGIE budgie-1.0 libpeas-1.0)
-    if (NOT BUDGIE_FOUND)
-        set(ENABLE_BUDGIE OFF)
-    endif()
-endif()
+cmake_dependent_option(ENABLE_BUDGIE "Enable budgie-desktop plugin" ON
+    "BUDGIE_FOUND; PEAS_FOUND" OFF)
 
 option(ENABLE_UNITY_GTK_MODULE "Build unity-gtk-module" OFF)
 
-- 
2.9.4


From fdbe99008576a29764bcc75b3c61c5a267bd574e Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Wed, 7 Jun 2017 16:39:39 +0300
Subject: [PATCH 03/21] Update README.md

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 51302ec..05f5016 100644
--- a/README.md
+++ b/README.md
@@ -20,7 +20,7 @@ This is Global Menu for using in Vala Panel, xfce4-panel and mate-panel (Budgie
 * Add to .config/gtk-3.0/settings.ini file in all distros:
 `gtk-shell-shows-app-menu=true`
 `gtk-shell-shows-menubar=true`
-* For now, it conflicts with [qt5ct](https://sourceforge.net/p/qt5ct/tickets/34/), so, use another PlatformTheme
+* It conflicts with [qt5ct](https://sourceforge.net/p/qt5ct/tickets/34/) before 21.04.2017, so, if you using old qt5ct, use another PlatformTheme
 * Add to .gtkrc-2.0 file in Ubuntu-based:
 `gtk-shell-shows-app-menu=1`
 `gtk-shell-shows-menubar=1`
-- 
2.9.4


From 133983304b99239a85f52031c3d80db706a4047e Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Wed, 7 Jun 2017 17:57:55 +0300
Subject: [PATCH 04/21] CMake: more CMakeDependentOption

---
 CMakeLists.txt                      |  6 +-----
 jayatana/CMakeLists.txt             | 21 +++++++++------------
 unity-gtk-module/CMakeLists.txt     | 34 +++++++++++++++-------------------
 unity-gtk-module/lib/CMakeLists.txt |  9 +++++++++
 4 files changed, 34 insertions(+), 36 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1f423ff..7dfb313 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -125,11 +125,7 @@ endif()
 cmake_dependent_option(ENABLE_BUDGIE "Enable budgie-desktop plugin" ON
     "BUDGIE_FOUND; PEAS_FOUND" OFF)
 
-option(ENABLE_UNITY_GTK_MODULE "Build unity-gtk-module" OFF)
-
-if(ENABLE_UNITY_GTK_MODULE)
-    add_subdirectory(unity-gtk-module)
-endif()
+add_subdirectory(unity-gtk-module)
 ADD_SUBDIRECTORY(jayatana)
 add_subdirectory(dbusmenu)
 ADD_SUBDIRECTORY(lib)
diff --git a/jayatana/CMakeLists.txt b/jayatana/CMakeLists.txt
index 11e7049..167d473 100644
--- a/jayatana/CMakeLists.txt
+++ b/jayatana/CMakeLists.txt
@@ -1,15 +1,12 @@
-option(ENABLE_JAYATANA "Build jayatana fork" OFF)
-if (ENABLE_JAYATANA)
-    find_package(Java)
-    find_package(JNI)
-    pkg_check_modules(XKBCOMMON
-        xkbcommon)
-	pkg_check_modules(DBUSMENU
-	    dbusmenu-glib-0.4)
-	if (NOT JAVA_FOUND OR NOT JNI_FOUND OR NOT DBUSMENU_FOUND OR NOT XKBCOMMON_FOUND)
-        set(ENABLE_JAYATANA OFF)
-    endif()
-endif()
+include(CMakeDependentOption)
+find_package(Java)
+find_package(JNI)
+pkg_check_modules(XKBCOMMON
+    xkbcommon)
+pkg_check_modules(DBUSMENU
+    dbusmenu-glib-0.4)
+cmake_dependent_option(ENABLE_JAYATANA "Build jayatana fork" OFF
+    "JAVA_FOUND;JNI_FOUND;XKBCOMMON_FOUND;DBUSMENU_FOUND" OFF)
 if (ENABLE_JAYATANA)
     add_subdirectory(lib)
     add_subdirectory(java)
diff --git a/unity-gtk-module/CMakeLists.txt b/unity-gtk-module/CMakeLists.txt
index 7290c52..63fae1d 100644
--- a/unity-gtk-module/CMakeLists.txt
+++ b/unity-gtk-module/CMakeLists.txt
@@ -1,24 +1,20 @@
-option(ENABLE_GTK_MODULE_DEMOS "Enable demo programs for gtk module" OFF)
-
 pkg_check_modules(GTK2
-    gtk+-2.0>=2.24)
+	gtk+-2.0>=2.24)
 find_package(X11)
 
-pkg_check_modules(DOC gtk-doc>=1.26)
-if(DOC_FOUND)
-	add_subdirectory(docs)
-endif()
-
-set(LIB_PUBLIC_HEADERS
-	lib/unity-gtk-parser.h
-	lib/unity-gtk-menu-shell.h
-	lib/unity-gtk-action-group.h)
+cmake_dependent_option(ENABLE_UNITY_GTK_MODULE "Build unity-gtk-module" OFF
+	"X11_FOUND" OFF)
+cmake_dependent_option(ENABLE_GTK_MODULE_DEMOS "Enable demo programs for gtk module" OFF
+	"ENABLE_UNITY_GTK_MODULE" OFF)
 
-set(GTK_MODULE_INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR}/appmenu-gtk-module)
 
-install(FILES ${LIB_PUBLIC_HEADERS} DESTINATION ${GTK_MODULE_INCLUDE_DIR})
-
-add_subdirectory(data)
-add_subdirectory(lib)
-add_subdirectory(src)
-add_subdirectory(tests)
+if(ENABLE_UNITY_GTK_MODULE)
+pkg_check_modules(DOC gtk-doc>=1.26)
+	if(DOC_FOUND)
+		add_subdirectory(docs)
+	endif()
+	add_subdirectory(data)
+	add_subdirectory(lib)
+	add_subdirectory(src)
+	add_subdirectory(tests)
+endif()
diff --git a/unity-gtk-module/lib/CMakeLists.txt b/unity-gtk-module/lib/CMakeLists.txt
index 8e4da7d..f19f6f2 100644
--- a/unity-gtk-module/lib/CMakeLists.txt
+++ b/unity-gtk-module/lib/CMakeLists.txt
@@ -36,3 +36,12 @@ if (GTK2_FOUND)
 	target_link_libraries(appmenu-gtk2-parser PRIVATE ${GLIB_LIBRARIES} ${GTK2_LIBRARIES} ${X11_LIBRARIES})
 	install(TARGETS appmenu-gtk2-parser DESTINATION ${CMAKE_INSTALL_LIBDIR})
 endif()
+
+set(LIB_PUBLIC_HEADERS
+	lib/unity-gtk-parser.h
+	lib/unity-gtk-menu-shell.h
+	lib/unity-gtk-action-group.h)
+
+set(GTK_MODULE_INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR}/appmenu-gtk-module)
+
+install(FILES ${LIB_PUBLIC_HEADERS} DESTINATION ${GTK_MODULE_INCLUDE_DIR})
-- 
2.9.4


From ebc0286ae441ece7d4cc8ce6f513ea30cc79fd34 Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Thu, 8 Jun 2017 16:34:20 +0300
Subject: [PATCH 05/21] Create README.md

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 05f5016..42c5bec 100644
--- a/README.md
+++ b/README.md
@@ -46,7 +46,7 @@ export UBUNTU_MENUPROXY
 *Arch Linux*
 * Install from AUR [unity-gtk-module-standalone-bzr](https://aur.archlinux.org/packages/unity-gtk-module-standalone-bzr/) for appmenu to work
 * Install [Appmenu](https://aur.archlinux.org/packages/appmenu-qt/) to get appmenu for Qt4 Applications to work. Qt 5.7 must work out of the box.
-* Install these [libdbusmenu-glib](https://aur.archlinux.org/packages/libdbusmenu-glib/) [libdbusmenu-gtk3](https://aur.archlinux.org/packages/libdbusmenu-gtk3/) [libdbusmenu-gtk2](https://aur.archlinux.org/packages/libdbusmenu-gtk2/) to get Chromium/Google Chrome to work
+* Install these [libdbusmenu-glib](https://archlinux.org/packages/libdbusmenu-glib/) [libdbusmenu-gtk3](https://archlinux.org/packages/libdbusmenu-gtk3/) [libdbusmenu-gtk2](https://archlinux.org/packages/libdbusmenu-gtk2/) to get Chromium/Google Chrome to work
 
 *For distros other than Arch or Ubuntu*
 * Build vala-panel-appmenu with `-DENABLE_UNITY_GTK_MODULE=ON`
-- 
2.9.4


From 8f1ba2a04e650c81886a001fbf9213540f27e53a Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Thu, 8 Jun 2017 16:36:55 +0300
Subject: [PATCH 06/21] Create README.md

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 42c5bec..33a47a9 100644
--- a/README.md
+++ b/README.md
@@ -44,7 +44,7 @@ export UBUNTU_MENUPROXY
 ```
 
 *Arch Linux*
-* Install from AUR [unity-gtk-module-standalone-bzr](https://aur.archlinux.org/packages/unity-gtk-module-standalone-bzr/) for appmenu to work
+* Install from AUR [appmenu-gtk-module-git](https://aur.archlinux.org/packages/appmenu-gtk-module-git/) for GTK applications to work
 * Install [Appmenu](https://aur.archlinux.org/packages/appmenu-qt/) to get appmenu for Qt4 Applications to work. Qt 5.7 must work out of the box.
 * Install these [libdbusmenu-glib](https://archlinux.org/packages/libdbusmenu-glib/) [libdbusmenu-gtk3](https://archlinux.org/packages/libdbusmenu-gtk3/) [libdbusmenu-gtk2](https://archlinux.org/packages/libdbusmenu-gtk2/) to get Chromium/Google Chrome to work
 
-- 
2.9.4


From b45b6c2d66ee4d8b118b44f2f1160d7c095677f9 Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Sun, 11 Jun 2017 10:18:45 +0400
Subject: [PATCH 07/21] Fix #97

---
 unity-gtk-module/lib/CMakeLists.txt | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/unity-gtk-module/lib/CMakeLists.txt b/unity-gtk-module/lib/CMakeLists.txt
index f19f6f2..a95e464 100644
--- a/unity-gtk-module/lib/CMakeLists.txt
+++ b/unity-gtk-module/lib/CMakeLists.txt
@@ -38,9 +38,9 @@ if (GTK2_FOUND)
 endif()
 
 set(LIB_PUBLIC_HEADERS
-	lib/unity-gtk-parser.h
-	lib/unity-gtk-menu-shell.h
-	lib/unity-gtk-action-group.h)
+	unity-gtk-parser.h
+	unity-gtk-menu-shell.h
+	unity-gtk-action-group.h)
 
 set(GTK_MODULE_INCLUDE_DIR ${CMAKE_INSTALL_INCLUDEDIR}/appmenu-gtk-module)
 
-- 
2.9.4


From 153847b4faa7ebfdfb584bdd94700b83f62f301f Mon Sep 17 00:00:00 2001
From: Ian McCausland <imccausl@icloud.com>
Date: Tue, 13 Jun 2017 01:29:55 -0400
Subject: [PATCH 08/21] Update readme (#98)

* Create README.md

* Update install instructions

* Create README.md

* Fix wording of install instructions

* Fix missing word in git command

* Create dependency installation script for ubuntu

* Cleaned up some of the instructions

* Cleaned up language

* Clarified some language

* Add rationale to mkdir build step

* Fix typo

* Clean up organization

* clean up post-build instructions

* Clean up post-install instructions even more

* Fix huggggeeee note about qt incompatibility

* Clean up intro

* Clean up too much italic. Wasn't into it.

* Edit and Expand README.md

Expanded, clarified and ordered installation instructions.

* Fix my own ignorance

Realized after going through previous pull requests that Athor is a nickname

* Delete install_ubuntu_deps

This was not supposed to be attached to the pull request! Sorry!
---
 README.md | 125 ++++++++++++++++++++++++++++++++++++++++++--------------------
 1 file changed, 86 insertions(+), 39 deletions(-)

diff --git a/README.md b/README.md
index 33a47a9..130acf1 100644
--- a/README.md
+++ b/README.md
@@ -2,60 +2,107 @@
 Vala Panel Application Menu
 ---
 
-This is Global Menu for using in Vala Panel, xfce4-panel and mate-panel (Budgie 10.x also planned). unity-gtk-module is used as backend.
+Vala Panel Application Menu is a Global Menu applet for use with Vala Panel, xfce4-panel and mate-panel (Budgie 10.x is also planned). unity-gtk-module is used as a backend, and thus must also be installed (see instructions, below).
 
-*Dependencies:*
+**REQUIRED DEPENDENCES**
 
-*All:*
  * GLib (>= 2.40.0)
  * GTK+ (>= 3.12.0)
  * valac (>= 0.24.0)
  * libbamf (>=0.5.0)
-
+    
 ---
-*Installation after building*
+Compilation Instructions
 ---
-* Create a .gtkrc in your home(~) directory
-* Create a .config/gtk-3.0/settings.ini file in your home(~) directory
-* Add to .config/gtk-3.0/settings.ini file in all distros:
-`gtk-shell-shows-app-menu=true`
-`gtk-shell-shows-menubar=true`
-* It conflicts with [qt5ct](https://sourceforge.net/p/qt5ct/tickets/34/) before 21.04.2017, so, if you using old qt5ct, use another PlatformTheme
-* Add to .gtkrc-2.0 file in Ubuntu-based:
-`gtk-shell-shows-app-menu=1`
-`gtk-shell-shows-menubar=1`
-* For XFCE Only: 
-`xfconf-query -c xsettings -p /Gtk/ShellShowsMenubar -n -t bool -s true`
-`xfconf-query -c xsettings -p /Gtk/ShellShowsAppmenu -n -t bool -s true`
-* Add to .profile and .bashrc on Ubuntu:
-```sh
-if [ -n "$GTK_MODULES" ]; then
-    GTK_MODULES="${GTK_MODULES}:unity-gtk-module"
-else
-    GTK_MODULES="unity-gtk-module"
-fi
-
-if [ -z "$UBUNTU_MENUPROXY" ]; then
-    UBUNTU_MENUPROXY=1
-fi
-
-export GTK_MODULES
-export UBUNTU_MENUPROXY
-```
-
-*Arch Linux*
+  * Clone this repository to your `home` directory by typing:
+  `git clone https://github.com/rilian-la-te/vala-panel-appmenu.git` then `cd` into the directory.
+  * type `git submodule init && git submodule update` to download the submodules (this will download the cmake and dbus-menu submodules you see in the repository, above)
+  * type `mkdir build && cd build` (to keep things tidy)
+  * You're **almost** ready to run `cmake`. First, review the following flags:
+    * CMAKE FLAGS:
+      * `-DENABLE_XFCE=[ON/OFF]` Use `ON` to compile applet for XFCE Panel
+      * `-DENABLE_BUDGIE=[ON/OFF]` Use `ON` to compile for budgie (experimental)
+      * `-DENABLE_VALAPANEL=[ON/OFF]` Use `ON` to compile for Vala Panel
+      * `-DENABLE_MATE=[ON/OFF]` Use `ON` to compile for MATE Panel
+      * `-DENABLE_JAYATANA=[ON/OFF]` Use `ON` to include Jayatana library (enable global menu for java swing applications)
+      * `-DENABLE_UNITY_GTK_MODULE=ON` Use this flag if you are compiling for a distro other than Arch (see instructions below for including unity-gtk-module with Arch) or Ubuntu (Ubuntu users can install unity-gtk-module from the ubuntu repositories--see 'Post-build Instructions', below).
+      * `-DCMAKE_INSTALL_PREFIX=[path]` By default, Vala-Panel-Appmenu will install in the `/usr/local` directory. You can use this flag to change that.
+  * once you've decided on any flags you want to include, type (from your build directory) `cmake [flags] ..`
+  * once the build is successful, you can compile and install Vala-Panel-Appmenu by typing `make && sudo make install`
+---
+Post-Build Instructions
+---
+- Enable unity-gtk-module:
+  - Create a .gtkrc in your home(~) directory, if there isn't one already.
+  - Add the following lines to this .gtkrc file:
+   `gtk-shell-shows-app-menu=1`
+   `gtk-shell-shows-menubar=1`
+  - Add the following lines to your .profile and .bashrc (in your home directory) in order to enable the unity-gtk-module:
+    ```sh
+    if [ -n "$GTK_MODULES" ]; then
+        GTK_MODULES="${GTK_MODULES}:unity-gtk-module"
+    else
+        GTK_MODULES="unity-gtk-module"
+    fi
+ 
+    if [ -z "$UBUNTU_MENUPROXY" ]; then
+        UBUNTU_MENUPROXY=1
+    fi
+
+    export GTK_MODULES
+    export UBUNTU_MENUPROXY
+    ```
+  
+To install unity-gtk-module for your distro:
+
+ **UBUNTU-BASED DISTROS**
+ - Install unity-gtk-module by typing `sudo apt-get install unity-gtk-module-common unity-gtk2-module unity-gtk3-module`
+
+ **ARCH-BASED DISTROS**
 * Install from AUR [appmenu-gtk-module-git](https://aur.archlinux.org/packages/appmenu-gtk-module-git/) for GTK applications to work
 * Install [Appmenu](https://aur.archlinux.org/packages/appmenu-qt/) to get appmenu for Qt4 Applications to work. Qt 5.7 must work out of the box.
 * Install these [libdbusmenu-glib](https://archlinux.org/packages/libdbusmenu-glib/) [libdbusmenu-gtk3](https://archlinux.org/packages/libdbusmenu-gtk3/) [libdbusmenu-gtk2](https://archlinux.org/packages/libdbusmenu-gtk2/) to get Chromium/Google Chrome to work
+ **DISTROS OTHER THAN ARCH OR UBUNTU**
+ - When building vala-panel-appmenu with CMAKE, use the flag, `-DENABLE_UNITY_GTK_MODULE=ON`
+ - Follow instructions in the (unity-gtk-module) [README](unity-gtk-module/README.md)
+
+**ALL DISTROS**
+- To get QT menus to work, install your distribution's qt4 and qt5 appmenu packages. In Ubuntu 17.04, for example, this involves typing `sudo apt-get install appmenu-qt`.
+
+**NOTE**: 
+Vala-Panel-Appmenu conflicts with [qt5ct](https://sourceforge.net/p/qt5ct/tickets/34/) before 21.04.2017, so, if you are using an older version of qt5ct, use another PlatformTheme.
+
+---
+Desktop Environment-Specific Settings
+---
+When using the Vala-panel-appmenu as an XFCE or MATE menu applet, you have to configure the appmenu to show in the panel applet, rather than on each individual window. This configuration should remove any 'double' menus you may experience:
+
+**XFCE**
+- If you are using Vala-Panel-Appmenu for XFCE-Panel, type the following lines into your console:
+`xfconf-query -c xsettings -p /Gtk/ShellShowsMenubar -n -t bool -s true`
+`xfconf-query -c xsettings -p /Gtk/ShellShowsAppmenu -n -t bool -s true`
+
+**MATE**
+- Enable the appmenu and menubar in gtk with these steps:
+- If you are using MATE>=1.19 (or 1.18 in Ubuntu), use this commands:
+`gsettings set org.mate.interface gtk-shell-shows-app-menu true`
+`gsettings set org.mate.interface gtk-shell-shows-menubar true`
+- If commands above does not work, create or edit .config/gtk-3.0/settings.ini file in your home(~) directory and add the following lines to it under `[Settings]`:
+  `gtk-shell-shows-app-menu=true`
+  `gtk-shell-shows-menubar=true`  
+
+---
+Experimental Features
+---
+**JAyatana**
+JAyatana allows for displaying global menus in Java Swing applications. Because Vala-Panel-Appmenu uses the unity-gtk-module backend, this should theoretically work with JAyatana, although applications such as Netbeans and the JetBrains suite of IDEs require some configuration, which you can figure out with a cursory internet search.
 
-*For distros other than Arch or Ubuntu*
-* Build vala-panel-appmenu with `-DENABLE_UNITY_GTK_MODULE=ON`
-* Follow instructions into [README](unity-gtk-module/README.md)
+There are some problems with the implementation, notably that you need to include `env XDG_CURRENT_DESKTOP=Unity` to the beginning of your launch command.
 
-*For JAyatana*
+Basic Instructions for Enabling JAyatana:
 * Install OpenJDK >= 7 or JDK >= 1.7
 * Build vala-panel-appmenu with `-DENABLE_JAYATANA=ON`
-* Find instructions in Internet and made a Pull Request:)))
+* Find instructions on Internet
 
 Author
 ===
-- 
2.9.4


From 4106c52f442d127fe4ba39259ff1907f83731cad Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Tue, 13 Jun 2017 08:30:55 +0300
Subject: [PATCH 09/21] Update README.md

---
 README.md | 1 +
 1 file changed, 1 insertion(+)

diff --git a/README.md b/README.md
index 130acf1..f516e22 100644
--- a/README.md
+++ b/README.md
@@ -62,6 +62,7 @@ To install unity-gtk-module for your distro:
 * Install from AUR [appmenu-gtk-module-git](https://aur.archlinux.org/packages/appmenu-gtk-module-git/) for GTK applications to work
 * Install [Appmenu](https://aur.archlinux.org/packages/appmenu-qt/) to get appmenu for Qt4 Applications to work. Qt 5.7 must work out of the box.
 * Install these [libdbusmenu-glib](https://archlinux.org/packages/libdbusmenu-glib/) [libdbusmenu-gtk3](https://archlinux.org/packages/libdbusmenu-gtk3/) [libdbusmenu-gtk2](https://archlinux.org/packages/libdbusmenu-gtk2/) to get Chromium/Google Chrome to work
+
  **DISTROS OTHER THAN ARCH OR UBUNTU**
  - When building vala-panel-appmenu with CMAKE, use the flag, `-DENABLE_UNITY_GTK_MODULE=ON`
  - Follow instructions in the (unity-gtk-module) [README](unity-gtk-module/README.md)
-- 
2.9.4


From 68fdb299e329fd2e84ff2eba891fe182a7b987de Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Tue, 13 Jun 2017 08:31:27 +0300
Subject: [PATCH 10/21] Update README.md

---
 README.md | 1 +
 1 file changed, 1 insertion(+)

diff --git a/README.md b/README.md
index f516e22..1fd5ec9 100644
--- a/README.md
+++ b/README.md
@@ -96,6 +96,7 @@ When using the Vala-panel-appmenu as an XFCE or MATE menu applet, you have to co
 Experimental Features
 ---
 **JAyatana**
+
 JAyatana allows for displaying global menus in Java Swing applications. Because Vala-Panel-Appmenu uses the unity-gtk-module backend, this should theoretically work with JAyatana, although applications such as Netbeans and the JetBrains suite of IDEs require some configuration, which you can figure out with a cursory internet search.
 
 There are some problems with the implementation, notably that you need to include `env XDG_CURRENT_DESKTOP=Unity` to the beginning of your launch command.
-- 
2.9.4


From 23d908864c2c1d8f2ee6c805f6056140ff8576b4 Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Tue, 13 Jun 2017 10:13:37 +0300
Subject: [PATCH 11/21] Create README.md

---
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 1fd5ec9..026ccba 100644
--- a/README.md
+++ b/README.md
@@ -32,7 +32,7 @@ Compilation Instructions
 ---
 Post-Build Instructions
 ---
-- Enable unity-gtk-module:
+- Enable unity-gtk-module on Ubuntu:
   - Create a .gtkrc in your home(~) directory, if there isn't one already.
   - Add the following lines to this .gtkrc file:
    `gtk-shell-shows-app-menu=1`
-- 
2.9.4


From 044fc17813ff2ae0af19fde2b1e5a7b0c990c3ea Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Mon, 19 Jun 2017 13:33:41 +0300
Subject: [PATCH 12/21] JAyatana: Fixed manifest.

---
 jayatana/java/CMakeLists.txt       | 3 +++
 jayatana/java/agent/MANIFEST.MF.in | 3 +++
 2 files changed, 6 insertions(+)
 create mode 100644 jayatana/java/agent/MANIFEST.MF.in

diff --git a/jayatana/java/CMakeLists.txt b/jayatana/java/CMakeLists.txt
index fd67c98..036a367 100644
--- a/jayatana/java/CMakeLists.txt
+++ b/jayatana/java/CMakeLists.txt
@@ -38,11 +38,14 @@ create_javah(TARGET java-headers
         jayatana-java
     )
 install_jar(jayatana-java DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/java)
+configure_file(agent/MANIFEST.MF.in ${CMAKE_CURRENT_BINARY_DIR}/agent/MANIFEST.MF)
 add_jar(agent-java
     SOURCES
         agent/Agent.java
     OUTPUT_NAME
         jayatanaag
+    MANIFEST
+        ${CMAKE_CURRENT_BINARY_DIR}/agent/MANIFEST.MF
     )
 install_jar(agent-java DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/java)
 add_custom_target(java-files-ide SOURCES ${JAVA_SOURCES})
diff --git a/jayatana/java/agent/MANIFEST.MF.in b/jayatana/java/agent/MANIFEST.MF.in
new file mode 100644
index 0000000..c793e2f
--- /dev/null
+++ b/jayatana/java/agent/MANIFEST.MF.in
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Created-By: @Java_VERSION_STRING@ (Oracle Corporation)
+Premain-Class: com.jarego.jayatana.Agent
-- 
2.9.4


From 1192314c5121105a6ee9aefbd2fcd106c4372a2b Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Tue, 20 Jun 2017 19:16:36 +0300
Subject: [PATCH 13/21] Lib: Bold appname as build option. Workaround for #81.

---
 CMakeLists.txt       | 4 ++++
 lib/CMakeLists.txt   | 1 +
 lib/appmenu.css      | 8 ++++++++
 lib/menu-widget.vala | 3 +++
 4 files changed, 16 insertions(+)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7dfb313..d8a8a1e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -125,6 +125,10 @@ endif()
 cmake_dependent_option(ENABLE_BUDGIE "Enable budgie-desktop plugin" ON
     "BUDGIE_FOUND; PEAS_FOUND" OFF)
 
+option(MAKE_BOLD_APPNAME "Make application name bold, if you like it" OFF)
+if(MAKE_BOLD_APPNAME)
+    set(BOLD_DEFINE -D BOLD)
+endif()
 add_subdirectory(unity-gtk-module)
 ADD_SUBDIRECTORY(jayatana)
 add_subdirectory(dbusmenu)
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index c57670f..e71dfee 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -29,6 +29,7 @@ OPTIONS
     --gresources=${CMAKE_CURRENT_SOURCE_DIR}/libappmenu.gresource.xml
     --thread
     ${WNCK_DEFINE}
+    ${BOLD_DEFINE}
 GENERATE_VAPI
     vala-panel-appmenu
 )
diff --git a/lib/appmenu.css b/lib/appmenu.css
index fda77d0..917f1db 100644
--- a/lib/appmenu.css
+++ b/lib/appmenu.css
@@ -3,3 +3,11 @@
     background-image: none;
     color: inherit;
 }
+
+.-vala-panel-appmenu-bold > * > GtkLabel,
+.-vala-panel-appmenu-bold > * > *  > GtkLabel {
+  font-weight: normal;
+}
+.-vala-panel-appmenu-bold:nth-child(1) > * > GtkLabel {
+  font-weight: 900;
+}
diff --git a/lib/menu-widget.vala b/lib/menu-widget.vala
index ecb2cb3..6839e29 100644
--- a/lib/menu-widget.vala
+++ b/lib/menu-widget.vala
@@ -57,6 +57,9 @@ namespace Appmenu
                     {
                         unowned Gtk.StyleContext context = ch.get_style_context();
                         context.add_provider(provider,Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION);
+#if BOLD
+                        context.add_class("-vala-panel-appmenu-bold");
+#endif
                         context.add_class("-vala-panel-appmenu-private");
                     }
                 });
-- 
2.9.4


From acbeb891bfcd72c3723176085bdc412a81f5a480 Mon Sep 17 00:00:00 2001
From: Konstantin <rilian-la-te@users.noreply.github.com>
Date: Thu, 22 Jun 2017 17:43:28 +0300
Subject: [PATCH 14/21] CSS: Remove old CSS names. For #81

---
 lib/appmenu.css | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/lib/appmenu.css b/lib/appmenu.css
index 917f1db..b1cd239 100644
--- a/lib/appmenu.css
+++ b/lib/appmenu.css
@@ -4,10 +4,10 @@
     color: inherit;
 }
 
-.-vala-panel-appmenu-bold > * > GtkLabel,
-.-vala-panel-appmenu-bold > * > *  > GtkLabel {
+.-vala-panel-appmenu-bold > * > label,
+.-vala-panel-appmenu-bold > * > *  > label {
   font-weight: normal;
 }
-.-vala-panel-appmenu-bold:nth-child(1) > * > GtkLabel {
+.-vala-panel-appmenu-bold:nth-child(1) > * > label {
   font-weight: 900;
 }
-- 
2.9.4


From f237aa8d1fab2b381dc303937f289870a13924f6 Mon Sep 17 00:00:00 2001
From: Ian McCausland <imccausl@icloud.com>
Date: Thu, 22 Jun 2017 11:28:39 -0400
Subject: [PATCH 15/21] Added -DMAKE_BOLD_APPNAME flag to compile options.
 (#103)

* Create README.md

* Update install instructions

* Create README.md

* Fix wording of install instructions

* Fix missing word in git command

* Create dependency installation script for ubuntu

* Cleaned up some of the instructions

* Cleaned up language

* Clarified some language

* Add rationale to mkdir build step

* Fix typo

* Clean up organization

* clean up post-build instructions

* Clean up post-install instructions even more

* Fix huggggeeee note about qt incompatibility

* Clean up intro

* Clean up too much italic. Wasn't into it.

* Edit and Expand README.md

Expanded, clarified and ordered installation instructions.

* Fix my own ignorance

Realized after going through previous pull requests that Athor is a nickname

* Delete install_ubuntu_deps

Experimental, in progress thing I was thinking of working on that somehow slipped into the pull request. I dont want that!

* Add updated readme

* Add MAKE_BOLD_APPNAME to cmake flags
---
 README.md | 1 +
 1 file changed, 1 insertion(+)

diff --git a/README.md b/README.md
index 026ccba..e5325fd 100644
--- a/README.md
+++ b/README.md
@@ -26,6 +26,7 @@ Compilation Instructions
       * `-DENABLE_MATE=[ON/OFF]` Use `ON` to compile for MATE Panel
       * `-DENABLE_JAYATANA=[ON/OFF]` Use `ON` to include Jayatana library (enable global menu for java swing applications)
       * `-DENABLE_UNITY_GTK_MODULE=ON` Use this flag if you are compiling for a distro other than Arch (see instructions below for including unity-gtk-module with Arch) or Ubuntu (Ubuntu users can install unity-gtk-module from the ubuntu repositories--see 'Post-build Instructions', below).
+      * `-DMAKE_BOLD_APPNAME=[ON/OFF]` Use `ON` to make appname menu font bold (similar to macOS menu style).
       * `-DCMAKE_INSTALL_PREFIX=[path]` By default, Vala-Panel-Appmenu will install in the `/usr/local` directory. You can use this flag to change that.
   * once you've decided on any flags you want to include, type (from your build directory) `cmake [flags] ..`
   * once the build is successful, you can compile and install Vala-Panel-Appmenu by typing `make && sudo make install`
-- 
2.9.4


From c2d0e53910c7a6dda94319940bea597b971a1d4f Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Sun, 25 Jun 2017 11:22:57 +0300
Subject: [PATCH 16/21] Unity-Gtk-Module: Disable GtkAction after its
 deprecation.

---
 CMakeLists.txt                                |  1 +
 unity-gtk-module/lib/unity-gtk-action-group.c | 10 ++++++----
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d8a8a1e..40dd6f2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -47,6 +47,7 @@ include (ValaPrecompile)
 add_definitions(-DVALA_VERSION="${VALA_SHORTVER}")
 #add_definitions(-w) #Suppress all GCC warnings
 add_definitions(-Wall -Wno-unused # Vala loves to create variables
+                -Wno-unused-parameter
 #		-pedantic
                 -Wno-ignored-qualifiers
                 -Wno-incompatible-pointer-types
diff --git a/unity-gtk-module/lib/unity-gtk-action-group.c b/unity-gtk-module/lib/unity-gtk-action-group.c
index f61b598..59a77a4 100644
--- a/unity-gtk-module/lib/unity-gtk-action-group.c
+++ b/unity-gtk-module/lib/unity-gtk-action-group.c
@@ -747,7 +747,6 @@ static gchar *unity_gtk_action_group_get_action_name(UnityGtkActionGroup *group,
                                                      UnityGtkMenuItem *item)
 {
 	GtkMenuItem *menu_item;
-	GtkAction *action;
 	const gchar *name;
 	gchar *normalized_name;
 	GHashTable *actions_by_name;
@@ -769,12 +768,13 @@ static gchar *unity_gtk_action_group_get_action_name(UnityGtkActionGroup *group,
 			menu_item = iter->data;
 	}
 
-	name   = NULL;
-	action = gtk_activatable_get_related_action(GTK_ACTIVATABLE(menu_item));
+	name = NULL;
+#if !GTK_CHECK_VERSION(3, 10, 0)
+	GtkAction *action = gtk_activatable_get_related_action(GTK_ACTIVATABLE(menu_item));
 
 	if (action != NULL)
 		name = gtk_action_get_name(action);
-
+#endif
 	if (name == NULL || name[0] == '\0')
 		name = gtk_menu_item_get_label(menu_item);
 
@@ -866,6 +866,7 @@ static gchar *unity_gtk_action_group_get_state_name(UnityGtkActionGroup *group,
 			else
 				name = normalized_label;
 		}
+#if !GTK_CHECK_VERSION(3, 10, 0)
 		else
 		{
 			GtkActivatable *activatable = GTK_ACTIVATABLE(item->menu_item);
@@ -921,6 +922,7 @@ static gchar *unity_gtk_action_group_get_state_name(UnityGtkActionGroup *group,
 				}
 			}
 		}
+#endif
 
 		if (name == NULL)
 		{
-- 
2.9.4


From 998db8143c934344389554e7ff66127ef0ab7742 Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Sun, 25 Jun 2017 12:19:12 +0300
Subject: [PATCH 17/21] Unity-Gtk-Module: moved platform-dependent functions to
 platform.c

---
 unity-gtk-module/src/CMakeLists.txt |   5 +-
 unity-gtk-module/src/main.c         | 123 ++----------------------------
 unity-gtk-module/src/platform.c     | 148 ++++++++++++++++++++++++++++++++++++
 unity-gtk-module/src/platform.h     |  10 +++
 4 files changed, 170 insertions(+), 116 deletions(-)
 create mode 100644 unity-gtk-module/src/platform.c
 create mode 100644 unity-gtk-module/src/platform.h

diff --git a/unity-gtk-module/src/CMakeLists.txt b/unity-gtk-module/src/CMakeLists.txt
index 2aaa950..1f17e4c 100644
--- a/unity-gtk-module/src/CMakeLists.txt
+++ b/unity-gtk-module/src/CMakeLists.txt
@@ -1,4 +1,7 @@
-set(MODULE_SOURCES main.c)
+set(MODULE_SOURCES main.c
+    platform.c
+    platform.h
+    )
 
 set(GTK3_MODULEDIR ${GTK3_LIBDIR}/gtk-3.0/modules)
 add_library(appmenu-gtk3-module MODULE ${MODULE_SOURCES})
diff --git a/unity-gtk-module/src/main.c b/unity-gtk-module/src/main.c
index 3556729..88c526a 100644
--- a/unity-gtk-module/src/main.c
+++ b/unity-gtk-module/src/main.c
@@ -21,6 +21,8 @@
 #include <gdk/gdkx.h>
 #include <gtk/gtk.h>
 
+#include "platform.h"
+
 /*
  * Default list of apps which should not be patched.
  * Use xprop | grep CLASS to find the name to use.
@@ -154,115 +156,6 @@ static gboolean is_true(const gchar *value)
 	       g_ascii_strcasecmp(value, "false") != 0;
 }
 
-static gchar *gtk_widget_get_x11_property_string(GtkWidget *widget, const gchar *name)
-{
-	GdkWindow *window;
-	GdkDisplay *display;
-	Display *xdisplay;
-	Window xwindow;
-	Atom property;
-	Atom actual_type;
-	int actual_format;
-	unsigned long nitems;
-	unsigned long bytes_after;
-	unsigned char *prop;
-
-	g_return_val_if_fail(GTK_IS_WIDGET(widget), NULL);
-
-	window   = gtk_widget_get_window(widget);
-	display  = gdk_window_get_display(window);
-	xdisplay = GDK_DISPLAY_XDISPLAY(display);
-	xwindow  = GDK_WINDOW_XID(window);
-
-	property = None;
-
-	if (display != NULL)
-		property = gdk_x11_get_xatom_by_name_for_display(display, name);
-
-	if (property == None)
-		property = gdk_x11_get_xatom_by_name(name);
-
-	g_return_val_if_fail(property != None, NULL);
-
-	if (XGetWindowProperty(xdisplay,
-	                       xwindow,
-	                       property,
-	                       0,
-	                       G_MAXLONG,
-	                       False,
-	                       AnyPropertyType,
-	                       &actual_type,
-	                       &actual_format,
-	                       &nitems,
-	                       &bytes_after,
-	                       &prop) == Success)
-	{
-		if (actual_format)
-		{
-			gchar *string = g_strdup((const gchar *)prop);
-
-			if (prop != NULL)
-				XFree(prop);
-
-			return string;
-		}
-		else
-			return NULL;
-	}
-
-	return NULL;
-}
-
-static void gtk_widget_set_x11_property_string(GtkWidget *widget, const gchar *name,
-                                               const gchar *value)
-{
-	GdkWindow *window;
-	GdkDisplay *display;
-	Display *xdisplay;
-	Window xwindow;
-	Atom property;
-	Atom type;
-
-	g_return_if_fail(GTK_IS_WIDGET(widget));
-
-	window   = gtk_widget_get_window(widget);
-	display  = gdk_window_get_display(window);
-	xdisplay = GDK_DISPLAY_XDISPLAY(display);
-	xwindow  = GDK_WINDOW_XID(window);
-
-	property = None;
-
-	if (display != NULL)
-		property = gdk_x11_get_xatom_by_name_for_display(display, name);
-
-	if (property == None)
-		property = gdk_x11_get_xatom_by_name(name);
-
-	g_return_if_fail(property != None);
-
-	type = None;
-
-	if (display != NULL)
-		type = gdk_x11_get_xatom_by_name_for_display(display, "UTF8_STRING");
-
-	if (type == None)
-		type = gdk_x11_get_xatom_by_name("UTF8_STRING");
-
-	g_return_if_fail(type != None);
-
-	if (value != NULL)
-		XChangeProperty(xdisplay,
-		                xwindow,
-		                property,
-		                type,
-		                8,
-		                PropModeReplace,
-		                (unsigned char *)value,
-		                g_utf8_strlen(value, -1));
-	else
-		XDeleteProperty(xdisplay, xwindow, property);
-}
-
 static WindowData *window_data_new(void)
 {
 	return g_slice_new0(WindowData);
@@ -348,11 +241,11 @@ static WindowData *gtk_window_get_window_data(GtkWindow *window)
 		GDBusConnection *session = g_bus_get_sync(G_BUS_TYPE_SESSION, NULL, NULL);
 		gchar *object_path       = g_strdup_printf(OBJECT_PATH "/%d", window_id);
 		gchar *old_unique_bus_name =
-		    gtk_widget_get_x11_property_string(GTK_WIDGET(window), _GTK_UNIQUE_BUS_NAME);
+            gtk_widget_get_property_string(GTK_WIDGET(window), _GTK_UNIQUE_BUS_NAME);
 		gchar *old_unity_object_path =
-		    gtk_widget_get_x11_property_string(GTK_WIDGET(window), _UNITY_OBJECT_PATH);
+            gtk_widget_get_property_string(GTK_WIDGET(window), _UNITY_OBJECT_PATH);
 		gchar *old_menubar_object_path =
-		    gtk_widget_get_x11_property_string(GTK_WIDGET(window),
+            gtk_widget_get_property_string(GTK_WIDGET(window),
 		                                       _GTK_MENUBAR_OBJECT_PATH);
 		GDBusActionGroup *old_action_group = NULL;
 		GDBusMenuModel *old_menu_model     = NULL;
@@ -400,18 +293,18 @@ static WindowData *gtk_window_get_window_data(GtkWindow *window)
 		                                          NULL);
 
 		if (old_unique_bus_name == NULL)
-			gtk_widget_set_x11_property_string(GTK_WIDGET(window),
+            gtk_widget_set_property_string(GTK_WIDGET(window),
 			                                   _GTK_UNIQUE_BUS_NAME,
 			                                   g_dbus_connection_get_unique_name(
 			                                       session));
 
 		if (old_unity_object_path == NULL)
-			gtk_widget_set_x11_property_string(GTK_WIDGET(window),
+            gtk_widget_set_property_string(GTK_WIDGET(window),
 			                                   _UNITY_OBJECT_PATH,
 			                                   object_path);
 
 		if (old_menubar_object_path == NULL)
-			gtk_widget_set_x11_property_string(GTK_WIDGET(window),
+            gtk_widget_set_property_string(GTK_WIDGET(window),
 			                                   _GTK_MENUBAR_OBJECT_PATH,
 			                                   object_path);
 
diff --git a/unity-gtk-module/src/platform.c b/unity-gtk-module/src/platform.c
new file mode 100644
index 0000000..5278bfc
--- /dev/null
+++ b/unity-gtk-module/src/platform.c
@@ -0,0 +1,148 @@
+#include "platform.h"
+
+#include <gtk/gtk.h>
+#include <gdk/gdkx.h>
+
+#if GTK_CHECK_VERSION(3,0,0)
+#include <gdk/gdkwayland.h>
+#endif
+
+#ifdef GDK_WINDOWING_X11
+G_GNUC_INTERNAL gchar *gtk_widget_get_x11_property_string(GtkWidget *widget, const gchar *name)
+{
+    GdkWindow *window;
+    GdkDisplay *display;
+    Display *xdisplay;
+    Window xwindow;
+    Atom property;
+    Atom actual_type;
+    int actual_format;
+    unsigned long nitems;
+    unsigned long bytes_after;
+    unsigned char *prop;
+
+    g_return_val_if_fail(GTK_IS_WIDGET(widget), NULL);
+
+    window   = gtk_widget_get_window(widget);
+    display  = gdk_window_get_display(window);
+    xdisplay = GDK_DISPLAY_XDISPLAY(display);
+    xwindow  = GDK_WINDOW_XID(window);
+
+    property = None;
+
+    if (display != NULL)
+        property = gdk_x11_get_xatom_by_name_for_display(display, name);
+
+    if (property == None)
+        property = gdk_x11_get_xatom_by_name(name);
+
+    g_return_val_if_fail(property != None, NULL);
+
+    if (XGetWindowProperty(xdisplay,
+                           xwindow,
+                           property,
+                           0,
+                           G_MAXLONG,
+                           False,
+                           AnyPropertyType,
+                           &actual_type,
+                           &actual_format,
+                           &nitems,
+                           &bytes_after,
+                           &prop) == Success)
+    {
+        if (actual_format)
+        {
+            gchar *string = g_strdup((const gchar *)prop);
+
+            if (prop != NULL)
+                XFree(prop);
+
+            return string;
+        }
+        else
+            return NULL;
+    }
+
+    return NULL;
+}
+
+G_GNUC_INTERNAL void gtk_widget_set_x11_property_string(GtkWidget *widget, const gchar *name,
+                                               const gchar *value)
+{
+    GdkWindow *window;
+    GdkDisplay *display;
+    Display *xdisplay;
+    Window xwindow;
+    Atom property;
+    Atom type;
+
+    g_return_if_fail(GTK_IS_WIDGET(widget));
+
+    window   = gtk_widget_get_window(widget);
+    display  = gdk_window_get_display(window);
+    xdisplay = GDK_DISPLAY_XDISPLAY(display);
+    xwindow  = GDK_WINDOW_XID(window);
+
+    property = None;
+
+    if (display != NULL)
+        property = gdk_x11_get_xatom_by_name_for_display(display, name);
+
+    if (property == None)
+        property = gdk_x11_get_xatom_by_name(name);
+
+    g_return_if_fail(property != None);
+
+    type = None;
+
+    if (display != NULL)
+        type = gdk_x11_get_xatom_by_name_for_display(display, "UTF8_STRING");
+
+    if (type == None)
+        type = gdk_x11_get_xatom_by_name("UTF8_STRING");
+
+    g_return_if_fail(type != None);
+
+    if (value != NULL)
+        XChangeProperty(xdisplay,
+                        xwindow,
+                        property,
+                        type,
+                        8,
+                        PropModeReplace,
+                        (unsigned char *)value,
+                        g_utf8_strlen(value, -1));
+    else
+        XDeleteProperty(xdisplay, xwindow, property);
+}
+#endif
+#ifdef GDK_WINDOWING_WAYLAND
+void                     gdk_wayland_window_set_dbus_properties_libgtk_only (GdkWindow  *window,
+                                                                             const char *application_id,
+                                                                             const char *app_menu_path,
+                                                                             const char *menubar_path,
+                                                                             const char *window_object_path,
+                                                                             const char *application_object_path,
+const char *unique_bus_name);
+
+
+#endif
+G_GNUC_INTERNAL void gtk_widget_set_property_string(GtkWidget *widget, const gchar *name,
+                                               const gchar *value)
+{
+#if GTK_MAJOR_VERSION == 3
+    if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
+#endif
+        gtk_widget_set_x11_property_string(widget,name,value);
+    g_assert_not_reached();
+}
+
+G_GNUC_INTERNAL gchar *gtk_widget_get_property_string(GtkWidget *widget, const gchar *name)
+{
+#if GTK_MAJOR_VERSION == 3
+    if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
+#endif
+        return gtk_widget_get_x11_property_string(widget,name);
+    g_assert_not_reached();
+}
diff --git a/unity-gtk-module/src/platform.h b/unity-gtk-module/src/platform.h
new file mode 100644
index 0000000..f5c3a31
--- /dev/null
+++ b/unity-gtk-module/src/platform.h
@@ -0,0 +1,10 @@
+#ifndef PLATFORM_H
+#define PLATFORM_H
+
+#include <gtk/gtk.h>
+
+void gtk_widget_set_property_string(GtkWidget *widget, const gchar *name,
+                                               const gchar *value);
+
+gchar *gtk_widget_get_property_string(GtkWidget *widget, const gchar *name);
+#endif // PLATFORM_H
-- 
2.9.4


From fd084e0375ee54f4ada9a611e32a3d4e0a5ebd8f Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Sun, 25 Jun 2017 12:20:55 +0300
Subject: [PATCH 18/21] Unity-Gtk-Module: Fix formatting.

---
 unity-gtk-module/src/main.c     |  26 +++--
 unity-gtk-module/src/platform.c | 210 ++++++++++++++++++++--------------------
 unity-gtk-module/src/platform.h |   3 +-
 3 files changed, 116 insertions(+), 123 deletions(-)

diff --git a/unity-gtk-module/src/main.c b/unity-gtk-module/src/main.c
index 88c526a..4b87fe7 100644
--- a/unity-gtk-module/src/main.c
+++ b/unity-gtk-module/src/main.c
@@ -241,12 +241,11 @@ static WindowData *gtk_window_get_window_data(GtkWindow *window)
 		GDBusConnection *session = g_bus_get_sync(G_BUS_TYPE_SESSION, NULL, NULL);
 		gchar *object_path       = g_strdup_printf(OBJECT_PATH "/%d", window_id);
 		gchar *old_unique_bus_name =
-            gtk_widget_get_property_string(GTK_WIDGET(window), _GTK_UNIQUE_BUS_NAME);
+		    gtk_widget_get_property_string(GTK_WIDGET(window), _GTK_UNIQUE_BUS_NAME);
 		gchar *old_unity_object_path =
-            gtk_widget_get_property_string(GTK_WIDGET(window), _UNITY_OBJECT_PATH);
+		    gtk_widget_get_property_string(GTK_WIDGET(window), _UNITY_OBJECT_PATH);
 		gchar *old_menubar_object_path =
-            gtk_widget_get_property_string(GTK_WIDGET(window),
-		                                       _GTK_MENUBAR_OBJECT_PATH);
+		    gtk_widget_get_property_string(GTK_WIDGET(window), _GTK_MENUBAR_OBJECT_PATH);
 		GDBusActionGroup *old_action_group = NULL;
 		GDBusMenuModel *old_menu_model     = NULL;
 
@@ -293,20 +292,19 @@ static WindowData *gtk_window_get_window_data(GtkWindow *window)
 		                                          NULL);
 
 		if (old_unique_bus_name == NULL)
-            gtk_widget_set_property_string(GTK_WIDGET(window),
-			                                   _GTK_UNIQUE_BUS_NAME,
-			                                   g_dbus_connection_get_unique_name(
-			                                       session));
+			gtk_widget_set_property_string(GTK_WIDGET(window),
+			                               _GTK_UNIQUE_BUS_NAME,
+			                               g_dbus_connection_get_unique_name(session));
 
 		if (old_unity_object_path == NULL)
-            gtk_widget_set_property_string(GTK_WIDGET(window),
-			                                   _UNITY_OBJECT_PATH,
-			                                   object_path);
+			gtk_widget_set_property_string(GTK_WIDGET(window),
+			                               _UNITY_OBJECT_PATH,
+			                               object_path);
 
 		if (old_menubar_object_path == NULL)
-            gtk_widget_set_property_string(GTK_WIDGET(window),
-			                                   _GTK_MENUBAR_OBJECT_PATH,
-			                                   object_path);
+			gtk_widget_set_property_string(GTK_WIDGET(window),
+			                               _GTK_MENUBAR_OBJECT_PATH,
+			                               object_path);
 
 		g_object_set_qdata_full(G_OBJECT(window),
 		                        window_data_quark(),
diff --git a/unity-gtk-module/src/platform.c b/unity-gtk-module/src/platform.c
index 5278bfc..9c1c3db 100644
--- a/unity-gtk-module/src/platform.c
+++ b/unity-gtk-module/src/platform.c
@@ -1,148 +1,144 @@
 #include "platform.h"
 
-#include <gtk/gtk.h>
 #include <gdk/gdkx.h>
+#include <gtk/gtk.h>
 
-#if GTK_CHECK_VERSION(3,0,0)
+#if GTK_CHECK_VERSION(3, 0, 0)
 #include <gdk/gdkwayland.h>
 #endif
 
 #ifdef GDK_WINDOWING_X11
 G_GNUC_INTERNAL gchar *gtk_widget_get_x11_property_string(GtkWidget *widget, const gchar *name)
 {
-    GdkWindow *window;
-    GdkDisplay *display;
-    Display *xdisplay;
-    Window xwindow;
-    Atom property;
-    Atom actual_type;
-    int actual_format;
-    unsigned long nitems;
-    unsigned long bytes_after;
-    unsigned char *prop;
-
-    g_return_val_if_fail(GTK_IS_WIDGET(widget), NULL);
-
-    window   = gtk_widget_get_window(widget);
-    display  = gdk_window_get_display(window);
-    xdisplay = GDK_DISPLAY_XDISPLAY(display);
-    xwindow  = GDK_WINDOW_XID(window);
-
-    property = None;
-
-    if (display != NULL)
-        property = gdk_x11_get_xatom_by_name_for_display(display, name);
-
-    if (property == None)
-        property = gdk_x11_get_xatom_by_name(name);
-
-    g_return_val_if_fail(property != None, NULL);
-
-    if (XGetWindowProperty(xdisplay,
-                           xwindow,
-                           property,
-                           0,
-                           G_MAXLONG,
-                           False,
-                           AnyPropertyType,
-                           &actual_type,
-                           &actual_format,
-                           &nitems,
-                           &bytes_after,
-                           &prop) == Success)
-    {
-        if (actual_format)
-        {
-            gchar *string = g_strdup((const gchar *)prop);
-
-            if (prop != NULL)
-                XFree(prop);
-
-            return string;
-        }
-        else
-            return NULL;
-    }
-
-    return NULL;
+	GdkWindow *window;
+	GdkDisplay *display;
+	Display *xdisplay;
+	Window xwindow;
+	Atom property;
+	Atom actual_type;
+	int actual_format;
+	unsigned long nitems;
+	unsigned long bytes_after;
+	unsigned char *prop;
+
+	g_return_val_if_fail(GTK_IS_WIDGET(widget), NULL);
+
+	window   = gtk_widget_get_window(widget);
+	display  = gdk_window_get_display(window);
+	xdisplay = GDK_DISPLAY_XDISPLAY(display);
+	xwindow  = GDK_WINDOW_XID(window);
+
+	property = None;
+
+	if (display != NULL)
+		property = gdk_x11_get_xatom_by_name_for_display(display, name);
+
+	if (property == None)
+		property = gdk_x11_get_xatom_by_name(name);
+
+	g_return_val_if_fail(property != None, NULL);
+
+	if (XGetWindowProperty(xdisplay,
+	                       xwindow,
+	                       property,
+	                       0,
+	                       G_MAXLONG,
+	                       False,
+	                       AnyPropertyType,
+	                       &actual_type,
+	                       &actual_format,
+	                       &nitems,
+	                       &bytes_after,
+	                       &prop) == Success)
+	{
+		if (actual_format)
+		{
+			gchar *string = g_strdup((const gchar *)prop);
+
+			if (prop != NULL)
+				XFree(prop);
+
+			return string;
+		}
+		else
+			return NULL;
+	}
+
+	return NULL;
 }
 
 G_GNUC_INTERNAL void gtk_widget_set_x11_property_string(GtkWidget *widget, const gchar *name,
-                                               const gchar *value)
+                                                        const gchar *value)
 {
-    GdkWindow *window;
-    GdkDisplay *display;
-    Display *xdisplay;
-    Window xwindow;
-    Atom property;
-    Atom type;
+	GdkWindow *window;
+	GdkDisplay *display;
+	Display *xdisplay;
+	Window xwindow;
+	Atom property;
+	Atom type;
 
-    g_return_if_fail(GTK_IS_WIDGET(widget));
+	g_return_if_fail(GTK_IS_WIDGET(widget));
 
-    window   = gtk_widget_get_window(widget);
-    display  = gdk_window_get_display(window);
-    xdisplay = GDK_DISPLAY_XDISPLAY(display);
-    xwindow  = GDK_WINDOW_XID(window);
+	window   = gtk_widget_get_window(widget);
+	display  = gdk_window_get_display(window);
+	xdisplay = GDK_DISPLAY_XDISPLAY(display);
+	xwindow  = GDK_WINDOW_XID(window);
 
-    property = None;
+	property = None;
 
-    if (display != NULL)
-        property = gdk_x11_get_xatom_by_name_for_display(display, name);
+	if (display != NULL)
+		property = gdk_x11_get_xatom_by_name_for_display(display, name);
 
-    if (property == None)
-        property = gdk_x11_get_xatom_by_name(name);
+	if (property == None)
+		property = gdk_x11_get_xatom_by_name(name);
 
-    g_return_if_fail(property != None);
+	g_return_if_fail(property != None);
 
-    type = None;
+	type = None;
 
-    if (display != NULL)
-        type = gdk_x11_get_xatom_by_name_for_display(display, "UTF8_STRING");
+	if (display != NULL)
+		type = gdk_x11_get_xatom_by_name_for_display(display, "UTF8_STRING");
 
-    if (type == None)
-        type = gdk_x11_get_xatom_by_name("UTF8_STRING");
+	if (type == None)
+		type = gdk_x11_get_xatom_by_name("UTF8_STRING");
 
-    g_return_if_fail(type != None);
+	g_return_if_fail(type != None);
 
-    if (value != NULL)
-        XChangeProperty(xdisplay,
-                        xwindow,
-                        property,
-                        type,
-                        8,
-                        PropModeReplace,
-                        (unsigned char *)value,
-                        g_utf8_strlen(value, -1));
-    else
-        XDeleteProperty(xdisplay, xwindow, property);
+	if (value != NULL)
+		XChangeProperty(xdisplay,
+		                xwindow,
+		                property,
+		                type,
+		                8,
+		                PropModeReplace,
+		                (unsigned char *)value,
+		                g_utf8_strlen(value, -1));
+	else
+		XDeleteProperty(xdisplay, xwindow, property);
 }
 #endif
 #ifdef GDK_WINDOWING_WAYLAND
-void                     gdk_wayland_window_set_dbus_properties_libgtk_only (GdkWindow  *window,
-                                                                             const char *application_id,
-                                                                             const char *app_menu_path,
-                                                                             const char *menubar_path,
-                                                                             const char *window_object_path,
-                                                                             const char *application_object_path,
-const char *unique_bus_name);
-
+void gdk_wayland_window_set_dbus_properties_libgtk_only(
+    GdkWindow *window, const char *application_id, const char *app_menu_path,
+    const char *menubar_path, const char *window_object_path, const char *application_object_path,
+    const char *unique_bus_name);
 
 #endif
 G_GNUC_INTERNAL void gtk_widget_set_property_string(GtkWidget *widget, const gchar *name,
-                                               const gchar *value)
+                                                    const gchar *value)
 {
 #if GTK_MAJOR_VERSION == 3
-    if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
+	if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
 #endif
-        gtk_widget_set_x11_property_string(widget,name,value);
-    g_assert_not_reached();
+		gtk_widget_set_x11_property_string(widget, name, value);
+	g_assert_not_reached();
 }
 
 G_GNUC_INTERNAL gchar *gtk_widget_get_property_string(GtkWidget *widget, const gchar *name)
 {
 #if GTK_MAJOR_VERSION == 3
-    if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
+	if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
 #endif
-        return gtk_widget_get_x11_property_string(widget,name);
-    g_assert_not_reached();
+		return gtk_widget_get_x11_property_string(widget, name);
+	g_assert_not_reached();
 }
diff --git a/unity-gtk-module/src/platform.h b/unity-gtk-module/src/platform.h
index f5c3a31..895f771 100644
--- a/unity-gtk-module/src/platform.h
+++ b/unity-gtk-module/src/platform.h
@@ -3,8 +3,7 @@
 
 #include <gtk/gtk.h>
 
-void gtk_widget_set_property_string(GtkWidget *widget, const gchar *name,
-                                               const gchar *value);
+void gtk_widget_set_property_string(GtkWidget *widget, const gchar *name, const gchar *value);
 
 gchar *gtk_widget_get_property_string(GtkWidget *widget, const gchar *name);
 #endif // PLATFORM_H
-- 
2.9.4


From aa86ebb8454e49084e807ea2947c0e3decc66222 Mon Sep 17 00:00:00 2001
From: Konstantin <ria.freelander@gmail.com>
Date: Thu, 29 Jun 2017 09:13:32 +0300
Subject: [PATCH 19/21] Unity-Gtk-Module: fix g_assert_not_reached. Fixes #105

---
 unity-gtk-module/src/platform.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/unity-gtk-module/src/platform.c b/unity-gtk-module/src/platform.c
index 9c1c3db..326fa10 100644
--- a/unity-gtk-module/src/platform.c
+++ b/unity-gtk-module/src/platform.c
@@ -131,7 +131,6 @@ G_GNUC_INTERNAL void gtk_widget_set_property_string(GtkWidget *widget, const gch
 	if (GDK_IS_X11_DISPLAY(gdk_display_get_default()))
 #endif
 		gtk_widget_set_x11_property_string(widget, name, value);
-	g_assert_not_reached();
 }
 
 G_GNUC_INTERNAL gchar *gtk_widget_get_property_string(GtkWidget *widget, const gchar *name)
-- 
2.9.4


From fd30d2200fe99d24581619c6a9b7c53e6d1340ac Mon Sep 17 00:00:00 2001
From: "La Ode Muh. Fadlun Akbar" <fadlun.net@gmail.com>
Date: Thu, 13 Jul 2017 14:38:33 +0700
Subject: [PATCH 20/21] cmake: fix wrong budgie plugin install destination

---
 lib/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index e71dfee..59d80d3 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -153,7 +153,7 @@ if(ENABLE_BUDGIE)
     target_link_libraries (appmenu-budgie ${CORE_LIBRARIES} ${WNCK_LIBRARIES} ${BUDGIE_LIBRARIES} m appmenu-core)
     link_directories (${CORE_LIBRARY_DIRS} ${WNCK_LIBRARY_DIRS} ${BUDGIE_LIBRARY_DIRS})
     # Install plugin stuffs
-    install(TARGETS appmenu-budgie DESTINATION ${CMAKE_INSTALL_LIBEXECDIR}/budgie-desktop/plugins)
+    install(TARGETS appmenu-budgie DESTINATION ${CMAKE_INSTALL_LIBDIR}/budgie-desktop/plugins)
 endif()
 ##########
 # MATE Part
-- 
2.9.4


From 91064c3ad18b8ee73ff093f36877250307f87ac7 Mon Sep 17 00:00:00 2001
From: "La Ode Muh. Fadlun Akbar" <fadlun.net@gmail.com>
Date: Sat, 15 Jul 2017 21:07:14 +0700
Subject: [PATCH 21/21] budgie: don't install the plugin in budgie plugin root
 directory

---
 data/CMakeLists.txt | 2 +-
 lib/CMakeLists.txt  | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/data/CMakeLists.txt b/data/CMakeLists.txt
index bd2141b..c0d48b7 100644
--- a/data/CMakeLists.txt
+++ b/data/CMakeLists.txt
@@ -11,5 +11,5 @@ if (ENABLE_VALAPANEL)
     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/appmenu.plugin DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}/vala-panel/applets/)
 endif()
 if (ENABLE_BUDGIE)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/appmenu-budgie.plugin DESTINATION ${CMAKE_INSTALL_LIBDIR}/budgie-desktop/plugins)
+    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/appmenu-budgie.plugin DESTINATION ${CMAKE_INSTALL_LIBDIR}/budgie-desktop/plugins/budgie-vala-panel-appmenu-plugin)
 endif()
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index 59d80d3..d5fe1a6 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -153,7 +153,7 @@ if(ENABLE_BUDGIE)
     target_link_libraries (appmenu-budgie ${CORE_LIBRARIES} ${WNCK_LIBRARIES} ${BUDGIE_LIBRARIES} m appmenu-core)
     link_directories (${CORE_LIBRARY_DIRS} ${WNCK_LIBRARY_DIRS} ${BUDGIE_LIBRARY_DIRS})
     # Install plugin stuffs
-    install(TARGETS appmenu-budgie DESTINATION ${CMAKE_INSTALL_LIBDIR}/budgie-desktop/plugins)
+    install(TARGETS appmenu-budgie DESTINATION ${CMAKE_INSTALL_LIBDIR}/budgie-desktop/plugins/budgie-vala-panel-appmenu-plugin)
 endif()
 ##########
 # MATE Part
-- 
2.9.4

